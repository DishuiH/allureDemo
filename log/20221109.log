[2022-11-09 10:44:18,158][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 10:46:00,263][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 10:46:00,264][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.iov2/public/auth/login
[2022-11-09 10:46:00,264][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 10:46:00,264][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 10:46:00,264][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667961960265
}
[2022-11-09 10:49:15,290][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 10:49:15,291][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 10:49:15,291][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 10:49:15,291][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 10:49:15,291][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667962155292
}
[2022-11-09 10:49:15,640][user.py 89][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'OhVUrFfdxecxIshAKM4IOiEaaNETueLk', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:00:00,452][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 11:00:00,453][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 11:00:00,453][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:00:00,453][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:00:00,453][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667962800454
}
[2022-11-09 11:00:00,773][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': '7dmZvtup2O6VkhtS6qZ3FUhoBAWaJ3Ol', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:00:00,773][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 11:00:00,773][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:00:00,773][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:00:00,773][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667962800774
}
[2022-11-09 11:00:00,987][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'fcZEOTARTAd4O7LsKWo4uS4ZrbjhBde5', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:00:00,988][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/loginMfa
[2022-11-09 11:00:00,988][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:00:00,988][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:00:00,988][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "user": "shawn.xiao2",
    "key": "fcZEOTARTAd4O7LsKWo4uS4ZrbjhBde5"
}
[2022-11-09 11:00:01,053][user.py 59][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1028, 'timestamp': '2022-11-09 03:00:00.509', 'message': 'Failed to perform login: session not found'} 
[2022-11-09 11:01:05,110][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 11:01:05,110][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 11:01:05,111][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:01:05,111][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:01:05,111][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667962865110
}
[2022-11-09 11:01:05,390][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'VsWLoAyhk8K2O7lPZaI0vT1A2mI43JGW', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:01:05,390][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 11:01:05,390][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:01:05,391][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:01:05,391][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667962865390
}
[2022-11-09 11:01:05,587][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'IVCU8Qq8InwvK9iJXZF7B83et7clBSr0', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:01:05,587][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/loginMfa
[2022-11-09 11:01:05,587][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:01:05,587][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:01:05,588][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "user": "shawn.xiao2",
    "key": "IVCU8Qq8InwvK9iJXZF7B83et7clBSr0"
}
[2022-11-09 11:01:05,819][user.py 59][INFO]: 接口返回码是 【 200 】, 返回信息：{'access_token': 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJyVWJDX2xrYy1rX2ZfQ1pmdGVKTTJOaFRVeHFvYkVLaF82eHZTLTZGYmpnIn0.eyJleHAiOjE2Njc5NjMwNDUsImlhdCI6MTY2Nzk2Mjg2NSwianRpIjoiMzg2ZjJkYWUtNzcxNC00NDc3LTgxOGItMjkxYmZkZTlhMzc2IiwiaXNzIjoiaHR0cHM6Ly9kZXYubWFtb3J1Y3J5cHRvLmlvL2F1dGgvcmVhbG1zL21hbW9ydSIsInN1YiI6ImFlNjU4MzE0LWNjN2UtNDcxOS04MWQzLTI2N2I1NmY1ZDNmNyIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFwcCIsInNlc3Npb25fc3RhdGUiOiJmNmUzYzIwMS0xMGU5LTQwMWItOTE4Yi1hZTE5MTMxMThjN2MiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmljZXIiLCJoZWFkX2FkbWluIiwidmlzaXRvciIsInByZXNpZGVudCJdfSwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBwaG9uZSBsaW1pdCBlbWFpbCBhZGRyZXNzIGt5YyBhdXRoIiwiZ3JvdXBzIjpbIm9mZmljZXIiLCJoZWFkX2FkbWluIiwidmlzaXRvciIsInByZXNpZGVudCJdLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzaGF3bi54aWFvMiIsImVudGl0eSI6IkdMIiwidXNlcm5hbWUiOiJzaGF3bi54aWFvMiJ9.G-pP7-ROitVB-ZAVCx8FhoIJ9kCf8WCOZGHM6p1eajwIjeO7g5ylq3twQIYYGIrWyZqYQKVvxiobONly57--9aLF4h9FrKMON4kv9XgkRa9lFM76Xgig5FfhtByU1luM0eWMlR0Ed2kqo-03wLxfkCUsccqScOakrl4DE6TxedEGJKVhABUFphqitTxLevrs2RoNw_ktylQv0gycXUZfiHhf3dkdHqjJbfsYkR6S88QAuTyQuczQGAI5836gBjFJ-oM7Wt8Xz1KciAsga95cuccVW0mc27FIun58T15ewaxTDhpJ9lxyQ_O0d7aIYub7oh3k3UrCmov-a_o6CcYL5w', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzOGRkZTIzMy01MDU2LTRjZDMtYmJmOS0xYWNiZTdiNGMxMDIifQ.eyJleHAiOjE2NjgwMDYwNjUsImlhdCI6MTY2Nzk2Mjg2NSwianRpIjoiM2UyMjRlZjEtN2UwZS00ZjZiLTllODctY2E0ZWVkZDkzZmIwIiwiaXNzIjoiaHR0cHM6Ly9kZXYubWFtb3J1Y3J5cHRvLmlvL2F1dGgvcmVhbG1zL21hbW9ydSIsImF1ZCI6Imh0dHBzOi8vZGV2Lm1hbW9ydWNyeXB0by5pby9hdXRoL3JlYWxtcy9tYW1vcnUiLCJzdWIiOiJhZTY1ODMxNC1jYzdlLTQ3MTktODFkMy0yNjdiNTZmNWQzZjciLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoiYXBwIiwic2Vzc2lvbl9zdGF0ZSI6ImY2ZTNjMjAxLTEwZTktNDAxYi05MThiLWFlMTkxMzExOGM3YyIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgcGhvbmUgbGltaXQgZW1haWwgYWRkcmVzcyBreWMgYXV0aCJ9.KYDmt6nwNkGpFnkKd2wmaOS3LlNJmijKMvvECQIjOM4', 'id_token': 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJyVWJDX2xrYy1rX2ZfQ1pmdGVKTTJOaFRVeHFvYkVLaF82eHZTLTZGYmpnIn0.eyJleHAiOjE2Njc5NjMwNDUsImlhdCI6MTY2Nzk2Mjg2NSwiYXV0aF90aW1lIjowLCJqdGkiOiIwZmRkODZiOC00NjI5LTQxMzItOGQ3NC1iMTZiMGFiZTVhNDQiLCJpc3MiOiJodHRwczovL2Rldi5tYW1vcnVjcnlwdG8uaW8vYXV0aC9yZWFsbXMvbWFtb3J1IiwiYXVkIjoiYXBwIiwic3ViIjoiYWU2NTgzMTQtY2M3ZS00NzE5LTgxZDMtMjY3YjU2ZjVkM2Y3IiwidHlwIjoiSUQiLCJhenAiOiJhcHAiLCJzZXNzaW9uX3N0YXRlIjoiZjZlM2MyMDEtMTBlOS00MDFiLTkxOGItYWUxOTEzMTE4YzdjIiwiYXRfaGFzaCI6Il9PaWRrU1VLbW9vVkNtaVZydDZPS1EiLCJhY3IiOiIxIiwibGFzdE5hbWUiOiJYaWFvIiwiYW1sVW5kZXJ0YWtpbmdTdGF0dXMiOiJjb21wbGV0ZWQiLCJiaXJ0aGRhdGUiOiIxOTg4LTAxLTAxIiwiZW1wbG95ZXJBZGRyZXNzIjoiVW5uYW1lZCBSb2FkLCBTb3V0aCBFYXN0IE5ldyBUZXJyaXRvcmllcywgTlQiLCJvY2N1cGF0aW9uIjoiSVRfREVWRUxPUEVSIiwiYmFua1Byb29mU3RhdHVzIjoiY29tcGxldGVkIiwianVyaXNDaGVja1N0YXR1cyI6ImNvbXBsZXRlZCIsImpvYlRpdGxlIjoiU2VuaW9yIGRlYnVnbG9wZXIiLCJlbXBsb3llck5hbWUiOiJGb29iYXIgU29sdXRpb25zIExpbWl0ZWQiLCJwZXJzb25hbFdhbGxldHMiOlsiQVZBWDoweDEwNDYzNTRENTZFNjk5MDAxZjFEMzEyMjc5QjdDRGM1NTlCYzc3N2Q7QVZBWDs7IiwiQlRDOjM2U3VTZGg1MnpYTUJneWRld3JEbXppMzNwaWhjcGN0WUE7QlRDOzsiLCJFVEg6MHgxMDQ2MzU0RDU2RTY5OTAwMWYxRDMxMjI3OUI3Q0RjNTU5QmM3NzdkO0VSQzIwOzsiLCJVU0RDOjB4MTA0NjM1NEQ1NkU2OTkwMDFmMUQzMTIyNzlCN0NEYzU1OUJjNzc3ZDtFUkMyMDs7Il0sImJhbmtOYW1lIjoiSFNCQyIsImt5Y0RvY3VtZW50U3RhdHVzIjoiY29tcGxldGVkIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2hhd24ueGlhbzIiLCJsb2NhbGUiOiJ0ciIsImJhbmtTd2lmdENvZGUiOiJNTVhYSSIsImxhc3RMb2dpbklwIjoiMjIwLjI0Ni42My40NiIsImt5Y0ZhY2VTdGF0dXMiOiJjb21wbGV0ZWQiLCJ1c2VyTGV2ZWwiOjMsImJhbmtBY2NvdW50SG9sZGVyIjoiWmhleGluIFhpYW8iLCJ0b3RwQ29uZmlndXJlZCI6dHJ1ZSwibWFya2V0aW5nT3B0SW5FbWFpbCI6dHJ1ZSwicGVyc29uYWxXYWxsZXRzVmVyaWZpY2F0aW9uU3RhdHVzIjoiY29tcGxldGVkIiwibWZhRW5hYmxlZCI6ZmFsc2UsImJhbmtBY2NvdW50TnVtYmVyIjoiMDEyMzQ1Njc4OSIsImFkZHJQcm9vZlN0YXR1cyI6ImNvbXBsZXRlZCIsImVtYWlsIjoiZ292aWNvMjQxMUBmZ3ZvZC5jb20iLCJiYW5rQ29kZSI6IjAwNCIsImJhbmtCcmFuY2hDb2RlIjoiMDAxMSIsImt5Y0NoZWNrU3RhdHVzIjoiY29tcGxldGVkIiwiYWRkcmVzcyI6eyJzdHJlZXRfYWRkcmVzcyI6IkFyZ3lsZSBTdHJlZXQiLCJsb2NhbGl0eSI6Ik1vbmdrb2siLCJyZWdpb24iOiJLb3dsb29uIiwiY291bnRyeSI6IkhvbmcgS29uZyJ9LCJyZWZlcnJhbElkIjoiMEJteFIteHc5VFh2VjdaeU1GRFdtciIsImdyb3VwcyI6WyJvZmZpY2VyIiwiaGVhZF9hZG1pbiIsInZpc2l0b3IiLCJwcmVzaWRlbnQiXSwiZXhwVHJhZGluZ0ZyZXEiOiJBQk9WRV8xSyIsImRlcG9zaXRXYWxsZXRzIjpbIkFMR086M0Y2VEtINlFFQzJDQkJQWU9OWkJWV0Q3RlFLUkxCNFlUUVBCTE9OV1dRUTJYWUJQUVFZWE5ENVRYQTtBTEdPOzE1MDE4NUVGQkM0NjRBOENCRkEyOyIsIkFWQVg6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0FWQVg7OyIsIkFYUzoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIkJOQjoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7QkVQMjA7OyIsIkJUQzp0YjFxZHo1bjh6ZGc1NmF2aDJ6c3YyYTc0dmdmZ2Vnc2h6a3p3bWRnamY7QlRDOzsiLCJDUlY6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJET0dFOm5kalpFWTE1aFIxak1CQlhmVmZxSk50cFJ2RXBvc21EcnE7RE9HRTs7IiwiRE9UOjVDVHNmS1UyRGV0MmhpMlR1bmJ1ajUyMlE3Sjhyc29SN2VjcGZpTHVZVlFDUzlLbztET1Q7OyIsIkVPUzoxZHh3dGNpMnRhcW87RU9TOzJTcEhSOXE0NzsiLCJFVEg6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJGVFQ6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJMVEM6dGx0YzFxZHo1bjh6ZGc1NmF2aDJ6c3YyYTc0dmdmZ2Vnc2h6a3pobjBrenE7TFRDOzsiLCJNQVRJQzoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIlBPTFk6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJTQU5EOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiU05YOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiU09MOjJCeWpuamNiQVZLaEN3dVU3Zk1uSFlWNTdxOVZneGd0NVFXclZ6Mmlrdjc3O1NPTDs7IiwiU1VTSEk6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJVTkk6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJVU0RUOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiVVNEVDpUUmpVdHg5QnVNS0tUTGZRZkdERUsyeUZhUG9GVFpmaTZGO1RSQzIwOzsiLCJYTE06R0RNWDJOSTcyQVFMSUlFRjdCWlhFR1dZUDRXQktGTUhUQ09CNEZOWlcyMkNESzdBRjZDRENaN1E7WExNOzMxNTkyNjY2ODE7IiwiWFJQOnJwdWducWV2bXNFZmt5Zlk0dmlLbllCTlZ1d0d3Qlk0OGg7WFJQOzE2NDc0MTk0MzA7IiwiWFRaOnR6MU01SlNRa0w0ZEVvRTlwNXFmNlNlTURLemJQQkcyQnhmUTtYVFo7OyJdLCJlbXBsb3ltZW50IjoiRlVMTF9USU1FIiwiZXhwVHJhZGluZ1ZvbCI6IkFCT1ZFXzEwTSIsIm1hcmtldGluZ09wdEluU21zIjpmYWxzZSwibGFzdExvZ2luVGltZSI6MTY2Nzk2MjgxNiwiZW1haWxWZXJpZmllZCI6dHJ1ZSwiZmlyc3ROYW1lIjoiU2hhd24iLCJlbXBsb3llckluZHVzdHJ5IjoiU29mdHdhcmUgRGV2ZWxvcG1lbnQgU2VydmljZXMiLCJwaG9uZU51bWJlciI6IiszMzc1NzEzMDIxOCIsIm5hbWUiOiJTaGF3biBYaWFvIiwicGhvbmVOdW1iZXJWZXJpZmllZCI6dHJ1ZSwiYmVuZWZpY2lhcnlEZWNsYXJhdGlvblN0YXR1cyI6ImNvbXBsZXRlZCIsImVudGl0eSI6IkdMIiwidXNlcm5hbWUiOiJzaGF3bi54aWFvMiJ9.BxX68AcO_3K3IIycKwLYgrvVilIKynxJxi2u8o1YXs4EwPA1gjoQ0hQGH85DaRGHGZ8utSE77XSwuOdd5XjvHVGuMV75loNE15sgyul-cKlMRljwh4QZOybikwa-qz-DjqbtGoP6UN_hyCvqWAHrHH50HG2FRbxT6CejMhAaKg2cs37v__TqUKYSw8ZKWmhg2REuKvZmi2jBw2lfLDqs187Qp6Hlan6ttxBxOS7TywmbCLP1R9kFQGF2RNB8xfnTgGMKyHyyrgZx9UdEx1X8d_-FxyL6RzZ1WsuunvqqGEXoXOiag3tckWLNRZA0tecyizRj0E50c8DS9IK3ktQsEw', 'expires_in': 180, 'refresh_expires_in': 43200} 
[2022-11-09 11:03:58,504][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 11:03:58,504][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 11:03:58,504][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:03:58,504][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:03:58,505][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667963038504
}
[2022-11-09 11:03:58,781][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'wpmFKfm6Iy8xS8rUvp5GTaOG3wDikqdK', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:03:58,781][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 11:03:58,781][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:03:58,781][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:03:58,782][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667963038782
}
[2022-11-09 11:03:58,950][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': '3138jzXOIfoZ4zNyU8PTZDWQm0F81FOH', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:03:58,950][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/loginMfa
[2022-11-09 11:03:58,950][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:03:58,950][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:03:58,950][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "user": "shawn.xiao2",
    "key": "3138jzXOIfoZ4zNyU8PTZDWQm0F81FOH"
}
[2022-11-09 11:03:59,141][user.py 59][INFO]: 接口返回码是 【 200 】, 返回信息：{'access_token': 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJyVWJDX2xrYy1rX2ZfQ1pmdGVKTTJOaFRVeHFvYkVLaF82eHZTLTZGYmpnIn0.eyJleHAiOjE2Njc5NjMyMTgsImlhdCI6MTY2Nzk2MzAzOCwianRpIjoiMmM2OGJlMmEtMTYwOS00ZDU0LThhZGMtZDRlODAwOTVlMWFkIiwiaXNzIjoiaHR0cHM6Ly9kZXYubWFtb3J1Y3J5cHRvLmlvL2F1dGgvcmVhbG1zL21hbW9ydSIsInN1YiI6ImFlNjU4MzE0LWNjN2UtNDcxOS04MWQzLTI2N2I1NmY1ZDNmNyIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFwcCIsInNlc3Npb25fc3RhdGUiOiI1MzEzOTgwNC02MjQzLTQxNGQtYmJhNy02NDU0ZTE4ZTNhOWEiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmljZXIiLCJoZWFkX2FkbWluIiwidmlzaXRvciIsInByZXNpZGVudCJdfSwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBwaG9uZSBsaW1pdCBlbWFpbCBhZGRyZXNzIGt5YyBhdXRoIiwiZ3JvdXBzIjpbIm9mZmljZXIiLCJoZWFkX2FkbWluIiwidmlzaXRvciIsInByZXNpZGVudCJdLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzaGF3bi54aWFvMiIsImVudGl0eSI6IkdMIiwidXNlcm5hbWUiOiJzaGF3bi54aWFvMiJ9.Zc1LvDGtGTen7LDNEwDVV7nAy2yb4v50SGf8jPhneR5n47m9lZF1slQ7J6xszTtsnavETok9DG0QViSQpTX6OT9OLttn2YJgr26CQgXhRzaKD6byh-Agy6nJ3FCRaMP_jfMXmJ_WuHeO61SS9UFxwT1QYEgvS-sH76gD9mTGC9M4xR6cbaUmxeJy8UfvPR5Nse8gKBSv3EQsq-_FzZcwCVfuG6ZDZGY6hPUS0-CxhYxmjnnLAakVsgaT9RMXj77DwbPwzPNzpvx7g1qOMpV0vFAoxuktFQX7teT3QBCQLxR16KXSobM3NhwKCylgwvkd3ymgifRUqSOWtFsGB16Q8g', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzOGRkZTIzMy01MDU2LTRjZDMtYmJmOS0xYWNiZTdiNGMxMDIifQ.eyJleHAiOjE2NjgwMDYyMzgsImlhdCI6MTY2Nzk2MzAzOCwianRpIjoiMjRlMzVkMGQtYWNkNy00MmRkLWIwYmUtN2U4ODBlNTFkNzc5IiwiaXNzIjoiaHR0cHM6Ly9kZXYubWFtb3J1Y3J5cHRvLmlvL2F1dGgvcmVhbG1zL21hbW9ydSIsImF1ZCI6Imh0dHBzOi8vZGV2Lm1hbW9ydWNyeXB0by5pby9hdXRoL3JlYWxtcy9tYW1vcnUiLCJzdWIiOiJhZTY1ODMxNC1jYzdlLTQ3MTktODFkMy0yNjdiNTZmNWQzZjciLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoiYXBwIiwic2Vzc2lvbl9zdGF0ZSI6IjUzMTM5ODA0LTYyNDMtNDE0ZC1iYmE3LTY0NTRlMThlM2E5YSIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgcGhvbmUgbGltaXQgZW1haWwgYWRkcmVzcyBreWMgYXV0aCJ9.VDe3JC4xjrXBT2_6mz6OOBGLqwewzN-Hn3npok0JAwo', 'id_token': 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJyVWJDX2xrYy1rX2ZfQ1pmdGVKTTJOaFRVeHFvYkVLaF82eHZTLTZGYmpnIn0.eyJleHAiOjE2Njc5NjMyMTgsImlhdCI6MTY2Nzk2MzAzOCwiYXV0aF90aW1lIjowLCJqdGkiOiIzYzQzNzQxMC1iMzhmLTRhMDAtYmUxYy1kOGM5OWYwYjgzYzYiLCJpc3MiOiJodHRwczovL2Rldi5tYW1vcnVjcnlwdG8uaW8vYXV0aC9yZWFsbXMvbWFtb3J1IiwiYXVkIjoiYXBwIiwic3ViIjoiYWU2NTgzMTQtY2M3ZS00NzE5LTgxZDMtMjY3YjU2ZjVkM2Y3IiwidHlwIjoiSUQiLCJhenAiOiJhcHAiLCJzZXNzaW9uX3N0YXRlIjoiNTMxMzk4MDQtNjI0My00MTRkLWJiYTctNjQ1NGUxOGUzYTlhIiwiYXRfaGFzaCI6InlPOUppVnY0S2owUkRaTWd6THAwMHciLCJhY3IiOiIxIiwibGFzdE5hbWUiOiJYaWFvIiwiYW1sVW5kZXJ0YWtpbmdTdGF0dXMiOiJjb21wbGV0ZWQiLCJiaXJ0aGRhdGUiOiIxOTg4LTAxLTAxIiwiZW1wbG95ZXJBZGRyZXNzIjoiVW5uYW1lZCBSb2FkLCBTb3V0aCBFYXN0IE5ldyBUZXJyaXRvcmllcywgTlQiLCJvY2N1cGF0aW9uIjoiSVRfREVWRUxPUEVSIiwiYmFua1Byb29mU3RhdHVzIjoiY29tcGxldGVkIiwianVyaXNDaGVja1N0YXR1cyI6ImNvbXBsZXRlZCIsImpvYlRpdGxlIjoiU2VuaW9yIGRlYnVnbG9wZXIiLCJlbXBsb3llck5hbWUiOiJGb29iYXIgU29sdXRpb25zIExpbWl0ZWQiLCJwZXJzb25hbFdhbGxldHMiOlsiQVZBWDoweDEwNDYzNTRENTZFNjk5MDAxZjFEMzEyMjc5QjdDRGM1NTlCYzc3N2Q7QVZBWDs7IiwiQlRDOjM2U3VTZGg1MnpYTUJneWRld3JEbXppMzNwaWhjcGN0WUE7QlRDOzsiLCJFVEg6MHgxMDQ2MzU0RDU2RTY5OTAwMWYxRDMxMjI3OUI3Q0RjNTU5QmM3NzdkO0VSQzIwOzsiLCJVU0RDOjB4MTA0NjM1NEQ1NkU2OTkwMDFmMUQzMTIyNzlCN0NEYzU1OUJjNzc3ZDtFUkMyMDs7Il0sImJhbmtOYW1lIjoiSFNCQyIsImt5Y0RvY3VtZW50U3RhdHVzIjoiY29tcGxldGVkIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2hhd24ueGlhbzIiLCJsb2NhbGUiOiJ0ciIsImJhbmtTd2lmdENvZGUiOiJNTVhYSSIsImxhc3RMb2dpbklwIjoiMjIzLjE5Ny4xNDguNjQiLCJreWNGYWNlU3RhdHVzIjoiY29tcGxldGVkIiwidXNlckxldmVsIjozLCJiYW5rQWNjb3VudEhvbGRlciI6IlpoZXhpbiBYaWFvIiwidG90cENvbmZpZ3VyZWQiOnRydWUsIm1hcmtldGluZ09wdEluRW1haWwiOnRydWUsInBlcnNvbmFsV2FsbGV0c1ZlcmlmaWNhdGlvblN0YXR1cyI6ImNvbXBsZXRlZCIsIm1mYUVuYWJsZWQiOmZhbHNlLCJiYW5rQWNjb3VudE51bWJlciI6IjAxMjM0NTY3ODkiLCJhZGRyUHJvb2ZTdGF0dXMiOiJjb21wbGV0ZWQiLCJlbWFpbCI6ImdvdmljbzI0MTFAZmd2b2QuY29tIiwiYmFua0NvZGUiOiIwMDQiLCJiYW5rQnJhbmNoQ29kZSI6IjAwMTEiLCJreWNDaGVja1N0YXR1cyI6ImNvbXBsZXRlZCIsImFkZHJlc3MiOnsic3RyZWV0X2FkZHJlc3MiOiJBcmd5bGUgU3RyZWV0IiwibG9jYWxpdHkiOiJNb25na29rIiwicmVnaW9uIjoiS293bG9vbiIsImNvdW50cnkiOiJIb25nIEtvbmcifSwicmVmZXJyYWxJZCI6IjBCbXhSLXh3OVRYdlY3WnlNRkRXbXIiLCJncm91cHMiOlsib2ZmaWNlciIsImhlYWRfYWRtaW4iLCJ2aXNpdG9yIiwicHJlc2lkZW50Il0sImV4cFRyYWRpbmdGcmVxIjoiQUJPVkVfMUsiLCJkZXBvc2l0V2FsbGV0cyI6WyJBTEdPOjNGNlRLSDZRRUMyQ0JCUFlPTlpCVldEN0ZRS1JMQjRZVFFQQkxPTldXUVEyWFlCUFFRWVhORDVUWEE7QUxHTzsxNTAxODVFRkJDNDY0QThDQkZBMjsiLCJBVkFYOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztBVkFYOzsiLCJBWFM6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJCTkI6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0JFUDIwOzsiLCJCVEM6dGIxcWR6NW44emRnNTZhdmgyenN2MmE3NHZnZmdlZ3Noemt6d21kZ2pmO0JUQzs7IiwiQ1JWOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiRE9HRTpuZGpaRVkxNWhSMWpNQkJYZlZmcUpOdHBSdkVwb3NtRHJxO0RPR0U7OyIsIkRPVDo1Q1RzZktVMkRldDJoaTJUdW5idWo1MjJRN0o4cnNvUjdlY3BmaUx1WVZRQ1M5S287RE9UOzsiLCJFT1M6MWR4d3RjaTJ0YXFvO0VPUzsyU3BIUjlxNDc7IiwiRVRIOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiRlRUOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiTFRDOnRsdGMxcWR6NW44emRnNTZhdmgyenN2MmE3NHZnZmdlZ3Noemt6aG4wa3pxO0xUQzs7IiwiTUFUSUM6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJQT0xZOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiU0FORDoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIlNOWDoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIlNPTDoyQnlqbmpjYkFWS2hDd3VVN2ZNbkhZVjU3cTlWZ3hndDVRV3JWejJpa3Y3NztTT0w7OyIsIlNVU0hJOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiVU5JOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiVVNEVDoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIlVTRFQ6VFJqVXR4OUJ1TUtLVExmUWZHREVLMnlGYVBvRlRaZmk2RjtUUkMyMDs7IiwiWExNOkdETVgyTkk3MkFRTElJRUY3QlpYRUdXWVA0V0JLRk1IVENPQjRGTlpXMjJDREs3QUY2Q0RDWjdRO1hMTTszMTU5MjY2NjgxOyIsIlhSUDpycHVnbnFldm1zRWZreWZZNHZpS25ZQk5WdXdHd0JZNDhoO1hSUDsxNjQ3NDE5NDMwOyIsIlhUWjp0ejFNNUpTUWtMNGRFb0U5cDVxZjZTZU1ES3piUEJHMkJ4ZlE7WFRaOzsiXSwiZW1wbG95bWVudCI6IkZVTExfVElNRSIsImV4cFRyYWRpbmdWb2wiOiJBQk9WRV8xME0iLCJtYXJrZXRpbmdPcHRJblNtcyI6ZmFsc2UsImxhc3RMb2dpblRpbWUiOjE2Njc5NjI4NjUsImVtYWlsVmVyaWZpZWQiOnRydWUsImZpcnN0TmFtZSI6IlNoYXduIiwiZW1wbG95ZXJJbmR1c3RyeSI6IlNvZnR3YXJlIERldmVsb3BtZW50IFNlcnZpY2VzIiwicGhvbmVOdW1iZXIiOiIrMzM3NTcxMzAyMTgiLCJuYW1lIjoiU2hhd24gWGlhbyIsInBob25lTnVtYmVyVmVyaWZpZWQiOnRydWUsImJlbmVmaWNpYXJ5RGVjbGFyYXRpb25TdGF0dXMiOiJjb21wbGV0ZWQiLCJlbnRpdHkiOiJHTCIsInVzZXJuYW1lIjoic2hhd24ueGlhbzIifQ.SMl-oQbUB7haw0EiepFaPYglAKcHgmLN4GVWSY-YbQpHNU83XaMmRSwmeatGkMEqt9ASwApbfwS82ciE85o5dbWln6WAAvUzFfWdkOG20fp5HmFDoVkLXFRGBG3jVmN0fufV9ju-LlgkJX9591EvsE6dUTjQA56op2OX7_AJr9dS7kp5-4FgABXA1edTolqBDtR4gZa1fT3HaDtewjmxAjSuRWiQaE0UCMnL9WnJ1Cg4WibSoxGjBLma0oba9JyTvssfOAuStb_W8L1m084FCEyO1H0chJSDnnphwx21L1yoKSK6YcvjzzoNrrdLSODVTj86NQkK7zI8hkmmc219PQ', 'expires_in': 180, 'refresh_expires_in': 43200} 
[2022-11-09 11:06:01,004][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 11:06:01,004][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 11:06:01,004][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:06:01,005][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:06:01,005][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667963161005
}
[2022-11-09 11:06:01,241][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': '1YoVgGZqc5oN011xE6QkWLvunRg4g3zt', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:06:01,242][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 11:06:01,242][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:06:01,242][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:06:01,242][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667963161242
}
[2022-11-09 11:06:01,418][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': '6Mkf69qJbd592DikF6sGeJiBIpx1acW3', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:06:01,418][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/loginMfa
[2022-11-09 11:06:01,418][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:06:01,418][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:06:01,419][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "user": "shawn.xiao2",
    "key": "6Mkf69qJbd592DikF6sGeJiBIpx1acW3"
}
[2022-11-09 11:06:01,607][user.py 59][INFO]: 接口返回码是 【 200 】, 返回信息：{'access_token': 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJyVWJDX2xrYy1rX2ZfQ1pmdGVKTTJOaFRVeHFvYkVLaF82eHZTLTZGYmpnIn0.eyJleHAiOjE2Njc5NjMzNDEsImlhdCI6MTY2Nzk2MzE2MSwianRpIjoiODdkMWU1MmQtYTlhMi00MTllLTk2ODYtOWJmNGIyOWYzOWEzIiwiaXNzIjoiaHR0cHM6Ly9kZXYubWFtb3J1Y3J5cHRvLmlvL2F1dGgvcmVhbG1zL21hbW9ydSIsInN1YiI6ImFlNjU4MzE0LWNjN2UtNDcxOS04MWQzLTI2N2I1NmY1ZDNmNyIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFwcCIsInNlc3Npb25fc3RhdGUiOiIyYTVmODdhZi1hNGM1LTQxMzItOTc4Yi04NTkxMTg0NTg5ZjUiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmljZXIiLCJoZWFkX2FkbWluIiwidmlzaXRvciIsInByZXNpZGVudCJdfSwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBwaG9uZSBsaW1pdCBlbWFpbCBhZGRyZXNzIGt5YyBhdXRoIiwiZ3JvdXBzIjpbIm9mZmljZXIiLCJoZWFkX2FkbWluIiwidmlzaXRvciIsInByZXNpZGVudCJdLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzaGF3bi54aWFvMiIsImVudGl0eSI6IkdMIiwidXNlcm5hbWUiOiJzaGF3bi54aWFvMiJ9.reS9RWuCRXDGITz9GQWcfsfJeodv8HrFHH4eN_1GP4TGjpAAFC8cx1_UjLyCOTV67If816EhNy42hJ1IdCAJplF1yuqeAHTk8cJZMr6niDJkBaa5i1Sc-p1uV2ubewJk3EZ43peJad4UTSEBF14GoyzNTJS-U1j7oKsPIqKjcbeIexVNt0ZFfIZ6izS4kdZC8d0_KYoBDmLPjjFEHMDXWf0bmHif8QvozOxgNANUXuy-33sjGVMqCtu61UYeWCJDDpynmPWiOhDJTgKKadUn2UTpVQG4zuHH8oB3eiOaQBvh5z4BkifYZq_uoyZaJFeEOt0hKFvMCAq6hvmxoNAfLg', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzOGRkZTIzMy01MDU2LTRjZDMtYmJmOS0xYWNiZTdiNGMxMDIifQ.eyJleHAiOjE2NjgwMDYzNjEsImlhdCI6MTY2Nzk2MzE2MSwianRpIjoiODllNWY0YzgtMDk0ZC00MTA1LTk4YzYtYmNjOTA3MWM2MjMzIiwiaXNzIjoiaHR0cHM6Ly9kZXYubWFtb3J1Y3J5cHRvLmlvL2F1dGgvcmVhbG1zL21hbW9ydSIsImF1ZCI6Imh0dHBzOi8vZGV2Lm1hbW9ydWNyeXB0by5pby9hdXRoL3JlYWxtcy9tYW1vcnUiLCJzdWIiOiJhZTY1ODMxNC1jYzdlLTQ3MTktODFkMy0yNjdiNTZmNWQzZjciLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoiYXBwIiwic2Vzc2lvbl9zdGF0ZSI6IjJhNWY4N2FmLWE0YzUtNDEzMi05NzhiLTg1OTExODQ1ODlmNSIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgcGhvbmUgbGltaXQgZW1haWwgYWRkcmVzcyBreWMgYXV0aCJ9.8ly1XJB5fOPBJiZZ21j3FnXLBNA6PojfxRrCJENW7nA', 'id_token': 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJyVWJDX2xrYy1rX2ZfQ1pmdGVKTTJOaFRVeHFvYkVLaF82eHZTLTZGYmpnIn0.eyJleHAiOjE2Njc5NjMzNDEsImlhdCI6MTY2Nzk2MzE2MSwiYXV0aF90aW1lIjowLCJqdGkiOiIyZjA4ZDc2ZS1jY2FhLTQzMzctYTIxNC05MWM3MjEzYTIzMGEiLCJpc3MiOiJodHRwczovL2Rldi5tYW1vcnVjcnlwdG8uaW8vYXV0aC9yZWFsbXMvbWFtb3J1IiwiYXVkIjoiYXBwIiwic3ViIjoiYWU2NTgzMTQtY2M3ZS00NzE5LTgxZDMtMjY3YjU2ZjVkM2Y3IiwidHlwIjoiSUQiLCJhenAiOiJhcHAiLCJzZXNzaW9uX3N0YXRlIjoiMmE1Zjg3YWYtYTRjNS00MTMyLTk3OGItODU5MTE4NDU4OWY1IiwiYXRfaGFzaCI6InR0VHByZFJ6YjI4RnBNTHZPQkdrR0EiLCJhY3IiOiIxIiwibGFzdE5hbWUiOiJYaWFvIiwiYW1sVW5kZXJ0YWtpbmdTdGF0dXMiOiJjb21wbGV0ZWQiLCJiaXJ0aGRhdGUiOiIxOTg4LTAxLTAxIiwiZW1wbG95ZXJBZGRyZXNzIjoiVW5uYW1lZCBSb2FkLCBTb3V0aCBFYXN0IE5ldyBUZXJyaXRvcmllcywgTlQiLCJvY2N1cGF0aW9uIjoiSVRfREVWRUxPUEVSIiwiYmFua1Byb29mU3RhdHVzIjoiY29tcGxldGVkIiwianVyaXNDaGVja1N0YXR1cyI6ImNvbXBsZXRlZCIsImpvYlRpdGxlIjoiU2VuaW9yIGRlYnVnbG9wZXIiLCJlbXBsb3llck5hbWUiOiJGb29iYXIgU29sdXRpb25zIExpbWl0ZWQiLCJwZXJzb25hbFdhbGxldHMiOlsiQVZBWDoweDEwNDYzNTRENTZFNjk5MDAxZjFEMzEyMjc5QjdDRGM1NTlCYzc3N2Q7QVZBWDs7IiwiQlRDOjM2U3VTZGg1MnpYTUJneWRld3JEbXppMzNwaWhjcGN0WUE7QlRDOzsiLCJFVEg6MHgxMDQ2MzU0RDU2RTY5OTAwMWYxRDMxMjI3OUI3Q0RjNTU5QmM3NzdkO0VSQzIwOzsiLCJVU0RDOjB4MTA0NjM1NEQ1NkU2OTkwMDFmMUQzMTIyNzlCN0NEYzU1OUJjNzc3ZDtFUkMyMDs7Il0sImJhbmtOYW1lIjoiSFNCQyIsImt5Y0RvY3VtZW50U3RhdHVzIjoiY29tcGxldGVkIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2hhd24ueGlhbzIiLCJsb2NhbGUiOiJ0ciIsImJhbmtTd2lmdENvZGUiOiJNTVhYSSIsImxhc3RMb2dpbklwIjoiMjIzLjE5Ny4xNDguNjQiLCJreWNGYWNlU3RhdHVzIjoiY29tcGxldGVkIiwidXNlckxldmVsIjozLCJiYW5rQWNjb3VudEhvbGRlciI6IlpoZXhpbiBYaWFvIiwidG90cENvbmZpZ3VyZWQiOnRydWUsIm1hcmtldGluZ09wdEluRW1haWwiOnRydWUsInBlcnNvbmFsV2FsbGV0c1ZlcmlmaWNhdGlvblN0YXR1cyI6ImNvbXBsZXRlZCIsIm1mYUVuYWJsZWQiOmZhbHNlLCJiYW5rQWNjb3VudE51bWJlciI6IjAxMjM0NTY3ODkiLCJhZGRyUHJvb2ZTdGF0dXMiOiJjb21wbGV0ZWQiLCJlbWFpbCI6ImdvdmljbzI0MTFAZmd2b2QuY29tIiwiYmFua0NvZGUiOiIwMDQiLCJiYW5rQnJhbmNoQ29kZSI6IjAwMTEiLCJreWNDaGVja1N0YXR1cyI6ImNvbXBsZXRlZCIsImFkZHJlc3MiOnsic3RyZWV0X2FkZHJlc3MiOiJBcmd5bGUgU3RyZWV0IiwibG9jYWxpdHkiOiJNb25na29rIiwicmVnaW9uIjoiS293bG9vbiIsImNvdW50cnkiOiJIb25nIEtvbmcifSwicmVmZXJyYWxJZCI6IjBCbXhSLXh3OVRYdlY3WnlNRkRXbXIiLCJncm91cHMiOlsib2ZmaWNlciIsImhlYWRfYWRtaW4iLCJ2aXNpdG9yIiwicHJlc2lkZW50Il0sImV4cFRyYWRpbmdGcmVxIjoiQUJPVkVfMUsiLCJkZXBvc2l0V2FsbGV0cyI6WyJBTEdPOjNGNlRLSDZRRUMyQ0JCUFlPTlpCVldEN0ZRS1JMQjRZVFFQQkxPTldXUVEyWFlCUFFRWVhORDVUWEE7QUxHTzsxNTAxODVFRkJDNDY0QThDQkZBMjsiLCJBVkFYOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztBVkFYOzsiLCJBWFM6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJCTkI6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0JFUDIwOzsiLCJCVEM6dGIxcWR6NW44emRnNTZhdmgyenN2MmE3NHZnZmdlZ3Noemt6d21kZ2pmO0JUQzs7IiwiQ1JWOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiRE9HRTpuZGpaRVkxNWhSMWpNQkJYZlZmcUpOdHBSdkVwb3NtRHJxO0RPR0U7OyIsIkRPVDo1Q1RzZktVMkRldDJoaTJUdW5idWo1MjJRN0o4cnNvUjdlY3BmaUx1WVZRQ1M5S287RE9UOzsiLCJFT1M6MWR4d3RjaTJ0YXFvO0VPUzsyU3BIUjlxNDc7IiwiRVRIOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiRlRUOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiTFRDOnRsdGMxcWR6NW44emRnNTZhdmgyenN2MmE3NHZnZmdlZ3Noemt6aG4wa3pxO0xUQzs7IiwiTUFUSUM6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJQT0xZOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiU0FORDoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIlNOWDoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIlNPTDoyQnlqbmpjYkFWS2hDd3VVN2ZNbkhZVjU3cTlWZ3hndDVRV3JWejJpa3Y3NztTT0w7OyIsIlNVU0hJOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiVU5JOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiVVNEVDoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIlVTRFQ6VFJqVXR4OUJ1TUtLVExmUWZHREVLMnlGYVBvRlRaZmk2RjtUUkMyMDs7IiwiWExNOkdETVgyTkk3MkFRTElJRUY3QlpYRUdXWVA0V0JLRk1IVENPQjRGTlpXMjJDREs3QUY2Q0RDWjdRO1hMTTszMTU5MjY2NjgxOyIsIlhSUDpycHVnbnFldm1zRWZreWZZNHZpS25ZQk5WdXdHd0JZNDhoO1hSUDsxNjQ3NDE5NDMwOyIsIlhUWjp0ejFNNUpTUWtMNGRFb0U5cDVxZjZTZU1ES3piUEJHMkJ4ZlE7WFRaOzsiXSwiZW1wbG95bWVudCI6IkZVTExfVElNRSIsImV4cFRyYWRpbmdWb2wiOiJBQk9WRV8xME0iLCJtYXJrZXRpbmdPcHRJblNtcyI6ZmFsc2UsImxhc3RMb2dpblRpbWUiOjE2Njc5NjMwMzgsImVtYWlsVmVyaWZpZWQiOnRydWUsImZpcnN0TmFtZSI6IlNoYXduIiwiZW1wbG95ZXJJbmR1c3RyeSI6IlNvZnR3YXJlIERldmVsb3BtZW50IFNlcnZpY2VzIiwicGhvbmVOdW1iZXIiOiIrMzM3NTcxMzAyMTgiLCJuYW1lIjoiU2hhd24gWGlhbyIsInBob25lTnVtYmVyVmVyaWZpZWQiOnRydWUsImJlbmVmaWNpYXJ5RGVjbGFyYXRpb25TdGF0dXMiOiJjb21wbGV0ZWQiLCJlbnRpdHkiOiJHTCIsInVzZXJuYW1lIjoic2hhd24ueGlhbzIifQ.N3yfJb6YmiBYa4vbenvPV0MUjqvp3bRrcda4r3GehIKUqCfpcGf1gEgifWDDspmQgV8cXhg878texor5rNW14NjYvZATJkAxWI5wr1Ku2iFuGiHO9oVa9qZ39zFWPkkQjZIMybXN-qK3ks1f89GuxC8ihUf7eb4H9w5yfUa0klRcniGVJMYwYXBvaAyU6UZpbJqy5bJPnuJz6P55vIl8k5jCRUhHeLm4S_hrplwT7Si3clMWhMNywgHiBvyTrjcoR0pMf8L2CzM2s5r6w-8UCmIotnLRZwxqN27N0MBcifScfC3ZaLjtxFa1NlDYT1RIc9MiP1zmow-RfbH2iqeEdw', 'expires_in': 180, 'refresh_expires_in': 43200} 
[2022-11-09 11:06:43,872][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 11:06:43,872][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 11:06:43,872][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:06:43,873][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:06:43,873][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667963203873
}
[2022-11-09 11:06:44,304][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'DaWTi4pFRlL8nIDxUSmVuTYhQwQ5qRQG', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:06:44,304][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 11:06:44,304][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:06:44,305][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:06:44,305][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667963204305
}
[2022-11-09 11:06:44,792][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'zV0hpUvaemJMziYBSIXzjd8Ee13KDcP5', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 11:06:44,792][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/loginMfa
[2022-11-09 11:06:44,792][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 11:06:44,792][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 11:06:44,792][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "user": "shawn.xiao2",
    "key": "zV0hpUvaemJMziYBSIXzjd8Ee13KDcP5"
}
[2022-11-09 11:06:45,436][user.py 59][INFO]: 接口返回码是 【 200 】, 返回信息：{'access_token': 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJyVWJDX2xrYy1rX2ZfQ1pmdGVKTTJOaFRVeHFvYkVLaF82eHZTLTZGYmpnIn0.eyJleHAiOjE2Njc5NjMzODQsImlhdCI6MTY2Nzk2MzIwNCwianRpIjoiZWU0MTIzM2ItZTA4YS00ODI3LTg5MjEtZGUzMjg5MGUwYTEyIiwiaXNzIjoiaHR0cHM6Ly9kZXYubWFtb3J1Y3J5cHRvLmlvL2F1dGgvcmVhbG1zL21hbW9ydSIsInN1YiI6ImFlNjU4MzE0LWNjN2UtNDcxOS04MWQzLTI2N2I1NmY1ZDNmNyIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFwcCIsInNlc3Npb25fc3RhdGUiOiI1MTczYmJiZi1mYTkyLTRiODAtODc5Zi1lNDQyMTgzMzJkMWEiLCJhY3IiOiIxIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmljZXIiLCJoZWFkX2FkbWluIiwidmlzaXRvciIsInByZXNpZGVudCJdfSwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBwaG9uZSBsaW1pdCBlbWFpbCBhZGRyZXNzIGt5YyBhdXRoIiwiZ3JvdXBzIjpbIm9mZmljZXIiLCJoZWFkX2FkbWluIiwidmlzaXRvciIsInByZXNpZGVudCJdLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzaGF3bi54aWFvMiIsImVudGl0eSI6IkdMIiwidXNlcm5hbWUiOiJzaGF3bi54aWFvMiJ9.abMBWyAAeV9hItPCiRmQrgsk-gLj-qd6KkgsopG5XMAhrVyEzEjqGx5urCuGPiDjI1PzaO78tSQFEOvjeqMjyAz5SH0zV59L-5wdqa0hkFnPuM9Be9cnKRz5erNDbF49bjqSrdm6h3q8QiXwmTpVNfkHBT8UIrVax0d67cINqQd6Jq2aXBwJsYGAWT0htpMBt2F09JHc7p3PL6LAr3PQiPZqloi4NR47JO6NZLreYQEHEe9xXAJiJ1RGt7CKVHshloZ7r6m8DD_3m0Rj36RsZIN6uvsNarXfFmpgvQofSQ8Fy3Fzd4j8ZN_vM32L1eLp4AVWaN6yYeZguH8iUaglAw', 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzOGRkZTIzMy01MDU2LTRjZDMtYmJmOS0xYWNiZTdiNGMxMDIifQ.eyJleHAiOjE2NjgwMDY0MDQsImlhdCI6MTY2Nzk2MzIwNCwianRpIjoiNTI0YjBiYzYtMmJlMC00OGQ0LTkxYmUtZTNjYTE1YmU5ZDIxIiwiaXNzIjoiaHR0cHM6Ly9kZXYubWFtb3J1Y3J5cHRvLmlvL2F1dGgvcmVhbG1zL21hbW9ydSIsImF1ZCI6Imh0dHBzOi8vZGV2Lm1hbW9ydWNyeXB0by5pby9hdXRoL3JlYWxtcy9tYW1vcnUiLCJzdWIiOiJhZTY1ODMxNC1jYzdlLTQ3MTktODFkMy0yNjdiNTZmNWQzZjciLCJ0eXAiOiJSZWZyZXNoIiwiYXpwIjoiYXBwIiwic2Vzc2lvbl9zdGF0ZSI6IjUxNzNiYmJmLWZhOTItNGI4MC04NzlmLWU0NDIxODMzMmQxYSIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgcGhvbmUgbGltaXQgZW1haWwgYWRkcmVzcyBreWMgYXV0aCJ9.5kDVFCadpn_nJzL_wp74c4lZxLpK-lmM8lIIH_RLH_U', 'id_token': 'eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJyVWJDX2xrYy1rX2ZfQ1pmdGVKTTJOaFRVeHFvYkVLaF82eHZTLTZGYmpnIn0.eyJleHAiOjE2Njc5NjMzODQsImlhdCI6MTY2Nzk2MzIwNCwiYXV0aF90aW1lIjowLCJqdGkiOiI3ZWYyNGY4Mi0wMDgxLTQ2YzAtYWUzOS01YzYxNWFkN2RmNjMiLCJpc3MiOiJodHRwczovL2Rldi5tYW1vcnVjcnlwdG8uaW8vYXV0aC9yZWFsbXMvbWFtb3J1IiwiYXVkIjoiYXBwIiwic3ViIjoiYWU2NTgzMTQtY2M3ZS00NzE5LTgxZDMtMjY3YjU2ZjVkM2Y3IiwidHlwIjoiSUQiLCJhenAiOiJhcHAiLCJzZXNzaW9uX3N0YXRlIjoiNTE3M2JiYmYtZmE5Mi00YjgwLTg3OWYtZTQ0MjE4MzMyZDFhIiwiYXRfaGFzaCI6IkU4anlZWS1SQWROcXZxQ3d5SVJwLWciLCJhY3IiOiIxIiwibGFzdE5hbWUiOiJYaWFvIiwiYW1sVW5kZXJ0YWtpbmdTdGF0dXMiOiJjb21wbGV0ZWQiLCJiaXJ0aGRhdGUiOiIxOTg4LTAxLTAxIiwiZW1wbG95ZXJBZGRyZXNzIjoiVW5uYW1lZCBSb2FkLCBTb3V0aCBFYXN0IE5ldyBUZXJyaXRvcmllcywgTlQiLCJvY2N1cGF0aW9uIjoiSVRfREVWRUxPUEVSIiwiYmFua1Byb29mU3RhdHVzIjoiY29tcGxldGVkIiwianVyaXNDaGVja1N0YXR1cyI6ImNvbXBsZXRlZCIsImpvYlRpdGxlIjoiU2VuaW9yIGRlYnVnbG9wZXIiLCJlbXBsb3llck5hbWUiOiJGb29iYXIgU29sdXRpb25zIExpbWl0ZWQiLCJwZXJzb25hbFdhbGxldHMiOlsiQVZBWDoweDEwNDYzNTRENTZFNjk5MDAxZjFEMzEyMjc5QjdDRGM1NTlCYzc3N2Q7QVZBWDs7IiwiQlRDOjM2U3VTZGg1MnpYTUJneWRld3JEbXppMzNwaWhjcGN0WUE7QlRDOzsiLCJFVEg6MHgxMDQ2MzU0RDU2RTY5OTAwMWYxRDMxMjI3OUI3Q0RjNTU5QmM3NzdkO0VSQzIwOzsiLCJVU0RDOjB4MTA0NjM1NEQ1NkU2OTkwMDFmMUQzMTIyNzlCN0NEYzU1OUJjNzc3ZDtFUkMyMDs7Il0sImJhbmtOYW1lIjoiSFNCQyIsImt5Y0RvY3VtZW50U3RhdHVzIjoiY29tcGxldGVkIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2hhd24ueGlhbzIiLCJsb2NhbGUiOiJ0ciIsImJhbmtTd2lmdENvZGUiOiJNTVhYSSIsImxhc3RMb2dpbklwIjoiMjIzLjE5Ny4xNDguNjQiLCJreWNGYWNlU3RhdHVzIjoiY29tcGxldGVkIiwidXNlckxldmVsIjozLCJiYW5rQWNjb3VudEhvbGRlciI6IlpoZXhpbiBYaWFvIiwidG90cENvbmZpZ3VyZWQiOnRydWUsIm1hcmtldGluZ09wdEluRW1haWwiOnRydWUsInBlcnNvbmFsV2FsbGV0c1ZlcmlmaWNhdGlvblN0YXR1cyI6ImNvbXBsZXRlZCIsIm1mYUVuYWJsZWQiOmZhbHNlLCJiYW5rQWNjb3VudE51bWJlciI6IjAxMjM0NTY3ODkiLCJhZGRyUHJvb2ZTdGF0dXMiOiJjb21wbGV0ZWQiLCJlbWFpbCI6ImdvdmljbzI0MTFAZmd2b2QuY29tIiwiYmFua0NvZGUiOiIwMDQiLCJiYW5rQnJhbmNoQ29kZSI6IjAwMTEiLCJreWNDaGVja1N0YXR1cyI6ImNvbXBsZXRlZCIsImFkZHJlc3MiOnsic3RyZWV0X2FkZHJlc3MiOiJBcmd5bGUgU3RyZWV0IiwibG9jYWxpdHkiOiJNb25na29rIiwicmVnaW9uIjoiS293bG9vbiIsImNvdW50cnkiOiJIb25nIEtvbmcifSwicmVmZXJyYWxJZCI6IjBCbXhSLXh3OVRYdlY3WnlNRkRXbXIiLCJncm91cHMiOlsib2ZmaWNlciIsImhlYWRfYWRtaW4iLCJ2aXNpdG9yIiwicHJlc2lkZW50Il0sImV4cFRyYWRpbmdGcmVxIjoiQUJPVkVfMUsiLCJkZXBvc2l0V2FsbGV0cyI6WyJBTEdPOjNGNlRLSDZRRUMyQ0JCUFlPTlpCVldEN0ZRS1JMQjRZVFFQQkxPTldXUVEyWFlCUFFRWVhORDVUWEE7QUxHTzsxNTAxODVFRkJDNDY0QThDQkZBMjsiLCJBVkFYOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztBVkFYOzsiLCJBWFM6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJCTkI6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0JFUDIwOzsiLCJCVEM6dGIxcWR6NW44emRnNTZhdmgyenN2MmE3NHZnZmdlZ3Noemt6d21kZ2pmO0JUQzs7IiwiQ1JWOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiRE9HRTpuZGpaRVkxNWhSMWpNQkJYZlZmcUpOdHBSdkVwb3NtRHJxO0RPR0U7OyIsIkRPVDo1Q1RzZktVMkRldDJoaTJUdW5idWo1MjJRN0o4cnNvUjdlY3BmaUx1WVZRQ1M5S287RE9UOzsiLCJFT1M6MWR4d3RjaTJ0YXFvO0VPUzsyU3BIUjlxNDc7IiwiRVRIOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiRlRUOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiTFRDOnRsdGMxcWR6NW44emRnNTZhdmgyenN2MmE3NHZnZmdlZ3Noemt6aG4wa3pxO0xUQzs7IiwiTUFUSUM6MHhBQ2U5NzUxMUI5YkJlOTczMmZBMDVBYjk5QjgzODY4ZjJCNzNiRTA3O0VSQzIwOzsiLCJQT0xZOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiU0FORDoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIlNOWDoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIlNPTDoyQnlqbmpjYkFWS2hDd3VVN2ZNbkhZVjU3cTlWZ3hndDVRV3JWejJpa3Y3NztTT0w7OyIsIlNVU0hJOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiVU5JOjB4QUNlOTc1MTFCOWJCZTk3MzJmQTA1QWI5OUI4Mzg2OGYyQjczYkUwNztFUkMyMDs7IiwiVVNEVDoweEFDZTk3NTExQjliQmU5NzMyZkEwNUFiOTlCODM4NjhmMkI3M2JFMDc7RVJDMjA7OyIsIlVTRFQ6VFJqVXR4OUJ1TUtLVExmUWZHREVLMnlGYVBvRlRaZmk2RjtUUkMyMDs7IiwiWExNOkdETVgyTkk3MkFRTElJRUY3QlpYRUdXWVA0V0JLRk1IVENPQjRGTlpXMjJDREs3QUY2Q0RDWjdRO1hMTTszMTU5MjY2NjgxOyIsIlhSUDpycHVnbnFldm1zRWZreWZZNHZpS25ZQk5WdXdHd0JZNDhoO1hSUDsxNjQ3NDE5NDMwOyIsIlhUWjp0ejFNNUpTUWtMNGRFb0U5cDVxZjZTZU1ES3piUEJHMkJ4ZlE7WFRaOzsiXSwiZW1wbG95bWVudCI6IkZVTExfVElNRSIsImV4cFRyYWRpbmdWb2wiOiJBQk9WRV8xME0iLCJtYXJrZXRpbmdPcHRJblNtcyI6ZmFsc2UsImxhc3RMb2dpblRpbWUiOjE2Njc5NjMxNjAsImVtYWlsVmVyaWZpZWQiOnRydWUsImZpcnN0TmFtZSI6IlNoYXduIiwiZW1wbG95ZXJJbmR1c3RyeSI6IlNvZnR3YXJlIERldmVsb3BtZW50IFNlcnZpY2VzIiwicGhvbmVOdW1iZXIiOiIrMzM3NTcxMzAyMTgiLCJuYW1lIjoiU2hhd24gWGlhbyIsInBob25lTnVtYmVyVmVyaWZpZWQiOnRydWUsImJlbmVmaWNpYXJ5RGVjbGFyYXRpb25TdGF0dXMiOiJjb21wbGV0ZWQiLCJlbnRpdHkiOiJHTCIsInVzZXJuYW1lIjoic2hhd24ueGlhbzIifQ.JP5z7gfJY61eSWbMrJ1whT0nKITFYEEfwrB4B8ZX6yzwxYiDdDHJ9kuK-DSwwJoVbxd30RMcpEqm71ZE0h8UaJiqnCFXXDAUna_k_uSSepJ1LxZKwg5IxL9XDhpRV9fYDQ2dKHgv_pS7yJrKxJ5TzfczVIa1MPD8i-u9vasANzAlnprK27rRNZlnHw5Dw8LkHw3nrWJ-y5j69abtWpzDNY2KSNSBBFsDQds_x5FdCJHK1--k7RzkGg2YaKrr49sG9jWOEnNqKvgS_IO_IF1d-MmLdNU7Usezl4IrtCmNx5T3JN4Xv0p6k3kg6z_cm6G6XaU_Ss9J_CA2uOSJu1ctdA', 'expires_in': 180, 'refresh_expires_in': 43200} 
[2022-11-09 12:02:05,456][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 12:02:05,472][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 12:02:50,204][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 12:02:50,222][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 12:03:03,526][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 12:03:03,537][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 12:03:19,699][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 12:03:19,700][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 12:03:19,701][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 12:03:19,701][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 12:03:19,720][read_data.py 24][INFO]: 读到数据 ==>>  {'test_pc_user_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account'], ['Login API - userIdOrEmail is null', '', 'P@ssw0rd', 406, '参数缺失(验证不通过)'], ['pc邮箱登录接口_密码为空', '1208339033@qq.com', ' ', False, 300, '参数缺失(验证不通过)'], ['pc邮箱登录接口_密码错误', '1208339033@qq.com', 'tttt', False, 502, '密码错误'], ['pc邮箱登录接口_用户名', '1208339033@qq.com;', 'tttt1234', False, 405, '用户不存在(非法用户)'], ['pc邮箱登录接口_SQL注入测试', '1208339033@qq.com', ' and 1=1', False, 405, '用户不存在(非法用户)']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 12:03:19,728][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 12:03:19,729][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:08:19,875][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:08:19,875][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:08:19,875][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:08:19,876][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:08:19,876][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667974099876
}
[2022-11-09 14:08:20,102][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'xUkQtWlYNkg8Gt8FL8myk3HP9YOh4sEH', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:08:34,070][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:08:34,071][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:08:34,071][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:08:34,071][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:08:34,071][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667974114070
}
[2022-11-09 14:08:34,266][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': '2FWGceIdVcRDd3YztZsyvWvEj25drInp', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:08:54,805][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:08:54,805][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:08:54,805][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:08:54,806][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:08:54,806][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667974134806
}
[2022-11-09 14:08:54,999][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'gztS6R509NsvjHNfyrmLsJLoHewaN864', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:09:07,791][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:09:07,792][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:09:07,792][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:09:07,792][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:09:07,793][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667974147793
}
[2022-11-09 14:09:07,989][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'kK30WX90Yb0FgY3wOW0D0Bxrel8avFoC', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:09:26,496][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:09:26,496][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:09:26,496][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:09:26,497][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:09:26,497][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "shawn.xiao2",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667974166497
}
[2022-11-09 14:09:26,695][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'shawn.xiao2', 'key': 'ZomyRQIZtWklILEqIlboES61K9nuc0zD', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:13:29,773][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:13:29,774][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:13:29,775][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:13:29,775][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:13:29,794][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account'], ['Login API - userIdOrEmail is null', '', 'P@ssw0rd', 406, '参数缺失(验证不通过)'], ['pc邮箱登录接口_密码为空', '1208339033@qq.com', ' ', False, 300, '参数缺失(验证不通过)'], ['pc邮箱登录接口_密码错误', '1208339033@qq.com', 'tttt', False, 502, '密码错误'], ['pc邮箱登录接口_用户名', '1208339033@qq.com;', 'tttt1234', False, 405, '用户不存在(非法用户)'], ['pc邮箱登录接口_SQL注入测试', '1208339033@qq.com', ' and 1=1', False, 405, '用户不存在(非法用户)']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:13:29,798][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:13:29,799][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:17:42,263][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:17:42,264][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:17:42,265][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:17:42,266][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:17:42,284][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account'], ['Login API - userIdOrEmail is null', '', 'P@ssw0rd', 406, '参数缺失(验证不通过)'], ['pc邮箱登录接口_密码为空', '1208339033@qq.com', ' ', False, 300, '参数缺失(验证不通过)'], ['pc邮箱登录接口_密码错误', '1208339033@qq.com', 'tttt', False, 502, '密码错误'], ['pc邮箱登录接口_用户名', '1208339033@qq.com;', 'tttt1234', False, 405, '用户不存在(非法用户)'], ['pc邮箱登录接口_SQL注入测试', '1208339033@qq.com', ' and 1=1', False, 405, '用户不存在(非法用户)']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:17:42,288][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:17:42,289][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:18:43,308][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:18:43,309][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:18:43,311][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:18:43,311][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:18:43,330][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account'], ['Login API - userIdOrEmail is null', '', 'P@ssw0rd', 406, '参数缺失(验证不通过)'], ['pc邮箱登录接口_密码为空', '1208339033@qq.com', ' ', False, 300, '参数缺失(验证不通过)'], ['pc邮箱登录接口_密码错误', '1208339033@qq.com', 'tttt', False, 502, '密码错误'], ['pc邮箱登录接口_用户名', '1208339033@qq.com;', 'tttt1234', False, 405, '用户不存在(非法用户)'], ['pc邮箱登录接口_SQL注入测试', '1208339033@qq.com', ' and 1=1', False, 405, '用户不存在(非法用户)']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:18:43,339][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:18:43,340][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:19:26,808][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:19:26,809][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:19:26,810][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:19:26,810][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:19:26,829][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:19:26,838][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:19:26,839][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:20:04,771][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:20:04,772][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:20:04,773][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:20:04,773][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:20:04,791][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:20:04,805][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:20:04,805][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:24:39,097][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:24:39,098][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:24:39,100][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:24:39,100][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:24:39,117][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:24:39,130][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:24:39,130][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:25:45,249][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:25:45,250][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:25:45,253][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:25:45,253][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:25:45,272][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:25:45,276][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:25:45,277][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:26:01,902][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:26:01,903][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:26:01,904][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:26:01,904][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:26:01,921][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:26:01,930][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:26:01,931][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:26:02,008][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 14:26:02,008][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 14:26:02,009][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:26:02,009][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:26:02,009][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:26:02,009][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667975162009
}
[2022-11-09 14:26:03,341][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '2w33gFaRkSc87KmWpXnIkYbXLRFdUaAC', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:26:03,341][test_05_email_login.py 25][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 14:26:03,341][test_05_email_login.py 34][INFO]: Email Login API - login success断言失败，原因【assert False】
[2022-11-09 14:26:03,341][test_05_email_login.py 35][INFO]: *************** 结束执行用例 ***************
[2022-11-09 14:26:03,347][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 14:26:03,347][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 14:26:03,348][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:26:03,348][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:26:03,348][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:26:03,348][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667975163349
}
[2022-11-09 14:26:03,509][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '4lIJTTxXHT82DvhCQx7tyG4Ku6CQv5DV', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:26:03,510][test_05_email_login.py 25][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 14:26:03,510][test_05_email_login.py 34][INFO]: userId Login API - login success断言失败，原因【assert False】
[2022-11-09 14:26:03,510][test_05_email_login.py 35][INFO]: *************** 结束执行用例 ***************
[2022-11-09 14:31:24,850][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:31:24,851][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:31:24,852][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:31:24,852][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:31:24,876][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:31:24,889][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:31:24,889][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:31:24,972][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 14:31:24,972][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 14:31:24,972][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:31:24,973][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:31:24,973][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:31:24,973][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667975484973
}
[2022-11-09 14:31:25,170][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'xUrNq3HR1KQaydveil5KxepEQ26hxGwQ', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:31:25,170][test_05_email_login.py 25][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 14:31:25,252][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 14:31:25,252][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 14:31:25,252][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:31:25,252][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:31:25,252][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:31:25,252][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667975485253
}
[2022-11-09 14:31:25,425][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '8b3mgQctDS8enxUw2wpjESc7YzRk4tqf', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:31:25,425][test_05_email_login.py 25][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 14:33:05,271][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:33:05,272][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:33:05,273][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:33:05,273][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:33:05,290][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:33:05,302][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:33:05,303][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:33:05,392][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 14:33:05,392][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 14:33:05,392][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:33:05,392][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:33:05,392][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:33:05,392][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667975585392
}
[2022-11-09 14:33:05,809][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '89wsRInn3ZK5Zwo15Wf8cPIORqD4Suph', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:33:05,809][test_05_email_login.py 25][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 14:33:05,918][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 14:33:05,918][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 14:33:05,919][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:33:05,919][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:33:05,919][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:33:05,919][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667975585920
}
[2022-11-09 14:33:06,075][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'PO1gjT2hSHy9CigkQWdtBO3H2hbv2BKZ', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:33:06,075][test_05_email_login.py 25][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 14:34:15,445][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:34:15,445][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:34:15,447][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:34:15,447][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:34:15,464][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account'], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:34:15,468][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:34:15,469][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:34:15,550][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 14:34:15,550][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 14:34:15,550][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:34:15,550][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:34:15,550][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:34:15,551][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667975655551
}
[2022-11-09 14:34:16,277][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'xOD9uwia4csm5TDiDOWKkJCho5ULp6FE', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:34:16,277][test_05_email_login.py 25][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 14:34:16,400][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 14:34:16,400][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 14:34:16,400][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:34:16,400][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:34:16,400][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:34:16,400][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667975656401
}
[2022-11-09 14:34:16,573][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'iivK0KVRrISykD9dc66IShiLarG3zInD', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:34:16,574][test_05_email_login.py 25][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 14:47:46,302][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:47:46,302][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:47:46,304][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:47:46,304][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:47:46,322][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account', None], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:47:46,330][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:47:46,331][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:48:11,823][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 14:48:11,824][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 14:48:11,825][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 14:48:11,825][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 14:48:11,842][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Email Login API - login success', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account', None], ['userId Login API - login success', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account', None]], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 14:48:11,853][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 14:48:11,854][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 14:48:11,938][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 14:48:11,938][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 14:48:11,938][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:48:11,938][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:48:11,938][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:48:11,938][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667976491938
}
[2022-11-09 14:48:12,201][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'qS6EfGP9GTgvdZGoiKLPfx1R7w2C4Rbc', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:48:12,201][test_05_email_login.py 25][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 14:48:12,296][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 14:48:12,296][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 14:48:12,296][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 14:48:12,296][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 14:48:12,296][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 14:48:12,296][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667976492296
}
[2022-11-09 14:48:12,714][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'EhDuqxewpYKbUCnxwWwwdEIeVAYiaIx1', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 14:48:12,714][test_05_email_login.py 25][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:02:19,661][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:02:19,662][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:02:19,663][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:02:19,663][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:02:19,681][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', '', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:02:19,685][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:02:19,686][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:02:32,972][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:02:32,973][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:02:32,975][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:02:32,975][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:02:32,998][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', '', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:02:33,001][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:02:33,002][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:02:33,095][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:02:33,095][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:02:33,196][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:02:33,196][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:02:33,210][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:02:33,211][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:02:33,225][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:02:33,225][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:02:33,237][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:02:33,237][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-09 16:15:45,659][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:15:45,660][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:15:45,661][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:15:45,661][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:15:45,681][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:15:45,693][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:15:45,694][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:15:45,794][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:15:45,794][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:15:45,881][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:15:45,882][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:15:45,892][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:15:45,892][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:15:45,905][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:15:45,905][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:15:45,915][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:15:45,915][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 16:18:24,556][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:18:24,557][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:18:24,559][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:18:24,559][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:18:24,577][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:18:24,588][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:18:24,589][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:18:24,683][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:18:24,683][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:18:24,683][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:18:24,684][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:18:24,684][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:18:24,684][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667981904683
}
[2022-11-09 16:18:24,935][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'sQ8NU2l2Ig8l1z0Y8fyRV56VZZD306zl', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:18:24,935][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:18:25,016][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:18:25,016][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:18:25,016][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:18:25,016][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:18:25,017][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:18:25,017][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667981905016
}
[2022-11-09 16:18:25,226][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '0VTlt5TSiMfCLdYMP1IJ9ImsZ5ZGq8Kp', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:18:25,227][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:18:25,247][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:18:25,247][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:18:25,247][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:18:25,247][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:18:25,247][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:18:25,247][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667981905247
}
[2022-11-09 16:18:25,280][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:18:24.548', 'message': 'Bad user credential'} 
[2022-11-09 16:18:25,281][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:18:25,299][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:18:25,299][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:18:25,299][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:18:25,299][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:18:25,300][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:18:25,300][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667981905299
}
[2022-11-09 16:18:25,352][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:18:24.610', 'message': 'Bad user credential'} 
[2022-11-09 16:18:25,353][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:18:25,374][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:18:25,374][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 16:18:25,374][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:18:25,374][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:18:25,375][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:18:25,375][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667981905375
}
[2022-11-09 16:18:25,491][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 08:18:24.750', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 16:18:25,492][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:18:47,119][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:18:47,120][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:18:47,122][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:18:47,122][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:18:47,142][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:18:47,149][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:18:47,150][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:18:47,268][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:18:47,269][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:18:47,269][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:18:47,269][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:18:47,269][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:18:47,269][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667981927270
}
[2022-11-09 16:18:47,481][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'uCh4CxP9EHqE56TUdJGCZcscKPzMb5ZF', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:18:47,481][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:18:47,481][test_05_email_login.py 34][INFO]: *************** 结束执行用例 ***************
[2022-11-09 16:18:47,492][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:18:47,492][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:18:47,492][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:18:47,492][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:18:47,492][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:18:47,492][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667981927493
}
[2022-11-09 16:18:47,650][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '2geWqJe26fjNh8z3vSjG2ym9h6lAFsAH', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:18:47,651][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:18:47,651][test_05_email_login.py 34][INFO]: *************** 结束执行用例 ***************
[2022-11-09 16:18:47,660][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:18:47,661][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:18:47,661][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:18:47,661][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:18:47,661][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:18:47,661][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667981927661
}
[2022-11-09 16:18:47,686][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:18:46.954', 'message': 'Bad user credential'} 
[2022-11-09 16:18:47,686][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:18:47,862][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:18:47,862][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:18:47,863][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:18:47,863][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:18:47,863][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:18:47,863][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667981927863
}
[2022-11-09 16:18:47,902][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:18:47.167', 'message': 'Bad user credential'} 
[2022-11-09 16:18:47,902][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:18:47,927][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:18:47,928][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 16:18:47,928][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:18:47,928][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:18:47,928][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:18:47,928][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667981927929
}
[2022-11-09 16:18:48,044][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 08:18:47.312', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 16:18:48,044][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:22:20,721][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:22:20,721][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:22:20,723][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:22:20,723][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:22:20,746][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:22:20,747][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:22:20,748][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:23:09,109][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:23:09,110][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:23:09,111][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:23:09,112][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:23:09,136][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'email', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:23:09,148][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:23:09,149][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:23:09,251][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:23:09,251][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：email，查看接口返回
[2022-11-09 16:23:09,251][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:23:09,251][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:23:09,251][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:23:09,251][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "P@ssw0rd",
    "password": "email",
    "captcha": "",
    "siteKey": 1667982189251
}
[2022-11-09 16:23:09,345][user.py 42][INFO]: 接口返回码是 【 500 】, 返回信息：{'timestamp': 1667982188597, 'status': 500, 'error': 'Internal Server Error', 'path': '/api/v2/public/auth/login'} 
[2022-11-09 16:23:09,345][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:23:09,434][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:23:09,435][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:23:09,435][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:23:09,435][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:23:09,435][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:23:09,435][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667982189436
}
[2022-11-09 16:23:09,588][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'kXUZGGvBry6BKZFofYwz2Jq3lw5SqmNH', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:23:09,588][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:23:09,588][test_05_email_login.py 34][INFO]: *************** 结束执行用例 ***************
[2022-11-09 16:23:09,601][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:23:09,601][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:23:09,601][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:23:09,601][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:23:09,602][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:23:09,602][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667982189602
}
[2022-11-09 16:23:09,621][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:23:08.885', 'message': 'Bad user credential'} 
[2022-11-09 16:23:09,622][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:23:09,640][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:23:09,640][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:23:09,640][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:23:09,640][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:23:09,640][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:23:09,640][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667982189641
}
[2022-11-09 16:23:09,669][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:23:08.934', 'message': 'Bad user credential'} 
[2022-11-09 16:23:09,670][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:23:09,699][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:23:09,699][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 16:23:09,699][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:23:09,699][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:23:09,699][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:23:09,700][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667982189699
}
[2022-11-09 16:23:09,817][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 08:23:09.078', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 16:23:09,818][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:33:51,583][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:33:51,584][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:33:51,585][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:33:51,585][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:33:51,607][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'email', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:33:51,614][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:33:51,615][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:33:51,718][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:33:51,718][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：email，查看接口返回
[2022-11-09 16:33:51,718][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:33:51,718][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:33:51,718][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:33:51,718][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "P@ssw0rd",
    "password": "email",
    "captcha": "",
    "siteKey": 1667982831719
}
[2022-11-09 16:33:51,825][user.py 42][INFO]: 接口返回码是 【 500 】, 返回信息：{'timestamp': 1667982831085, 'status': 500, 'error': 'Internal Server Error', 'path': '/api/v2/public/auth/login'} 
[2022-11-09 16:33:51,825][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:33:51,917][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:33:51,917][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:33:51,917][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:33:51,917][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:33:51,917][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:33:51,917][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667982831918
}
[2022-11-09 16:33:52,094][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'dQaH79QeWyJEP9xNet4sZDWJXofNeSfO', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:33:52,095][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:33:52,095][test_05_email_login.py 34][INFO]: *************** 结束执行用例 ***************
[2022-11-09 16:33:52,112][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:33:52,112][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:33:52,112][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:33:52,112][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:33:52,113][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:33:52,113][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667982832113
}
[2022-11-09 16:33:52,143][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:33:51.387', 'message': 'Bad user credential'} 
[2022-11-09 16:33:52,143][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:33:52,166][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:33:52,166][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:33:52,167][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:33:52,167][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:33:52,167][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:33:52,167][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667982832167
}
[2022-11-09 16:33:52,224][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:33:51.476', 'message': 'Bad user credential'} 
[2022-11-09 16:33:52,224][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:33:52,245][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:33:52,245][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 16:33:52,245][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:33:52,245][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:33:52,245][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:33:52,245][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667982832245
}
[2022-11-09 16:33:52,361][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 08:33:51.622', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 16:33:52,362][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:38:52,666][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:38:52,667][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:38:52,668][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:38:52,668][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:38:52,693][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'email', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:38:52,695][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:38:52,696][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:38:52,807][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:38:52,807][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：email，查看接口返回
[2022-11-09 16:38:52,808][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:38:52,808][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:38:52,808][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:38:52,808][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "P@ssw0rd",
    "password": "email",
    "captcha": "",
    "siteKey": 1667983132809
}
[2022-11-09 16:38:52,862][user.py 42][INFO]: 接口返回码是 【 500 】, 返回信息：{'timestamp': 1667983132120, 'status': 500, 'error': 'Internal Server Error', 'path': '/api/v2/public/auth/login'} 
[2022-11-09 16:38:52,863][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:38:52,967][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:38:52,967][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:38:52,967][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:38:52,967][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:38:52,967][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:38:52,968][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667983132968
}
[2022-11-09 16:38:53,119][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'aoPmYW4P9XBnjBq5ifF4zOlF17xIYzux', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:38:53,119][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:38:53,119][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 16:38:53,120][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 16:38:53,133][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:38:53,133][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:38:53,133][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:38:53,133][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:38:53,133][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:38:53,133][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667983133133
}
[2022-11-09 16:38:53,150][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:38:52.406', 'message': 'Bad user credential'} 
[2022-11-09 16:38:53,151][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:38:53,183][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:38:53,183][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:38:53,183][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:38:53,183][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:38:53,183][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:38:53,183][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667983133183
}
[2022-11-09 16:38:53,218][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:38:52.475', 'message': 'Bad user credential'} 
[2022-11-09 16:38:53,218][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:38:53,250][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:38:53,251][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 16:38:53,251][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:38:53,251][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:38:53,251][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:38:53,251][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667983133252
}
[2022-11-09 16:38:53,363][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 08:38:52.618', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 16:38:53,364][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:46:44,775][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:46:44,776][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:46:44,778][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:46:44,778][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:46:44,801][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'email', 'P@ssw0rd', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:46:44,805][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:46:44,806][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:46:44,921][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:46:44,921][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：email，查看接口返回
[2022-11-09 16:46:44,921][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:46:44,921][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:46:44,921][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:46:44,921][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "P@ssw0rd",
    "password": "email",
    "captcha": "",
    "siteKey": 1667983604922
}
[2022-11-09 16:46:45,021][user.py 42][INFO]: 接口返回码是 【 500 】, 返回信息：{'timestamp': 1667983604273, 'status': 500, 'error': 'Internal Server Error', 'path': '/api/v2/public/auth/login'} 
[2022-11-09 16:46:45,021][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:46:45,123][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:46:45,123][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:46:45,123][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:46:45,123][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:46:45,123][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:46:45,123][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667983605123
}
[2022-11-09 16:46:45,282][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'lXA23BMcjycxvSiKLa1QY9QP7QNeCBb2', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:46:45,282][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:46:45,282][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 16:46:45,282][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 16:46:45,300][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:46:45,300][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:46:45,300][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:46:45,301][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:46:45,301][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:46:45,301][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667983605301
}
[2022-11-09 16:46:45,320][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:46:44.571', 'message': 'Bad user credential'} 
[2022-11-09 16:46:45,320][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:46:45,362][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:46:45,363][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:46:45,363][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:46:45,363][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:46:45,365][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:46:45,365][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667983605364
}
[2022-11-09 16:46:45,408][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:46:44.653', 'message': 'Bad user credential'} 
[2022-11-09 16:46:45,409][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:46:45,446][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:46:45,446][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 16:46:45,446][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:46:45,447][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:46:45,447][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:46:45,447][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667983605447
}
[2022-11-09 16:46:45,561][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 08:46:44.813', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 16:46:45,562][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:59:03,695][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:59:03,696][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:59:03,697][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:59:03,698][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:59:03,717][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:59:03,721][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:59:03,722][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:59:03,816][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:59:03,816][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:59:03,816][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:59:03,816][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:59:03,816][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:59:03,816][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667984343816
}
[2022-11-09 16:59:04,053][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'kKpYmbuu00id0CqtaQDvO2NH9XQT2NDM', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:59:04,054][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:59:04,054][test_05_email_login.py 30][INFO]: *************** Login API - login success with email 断言成功  ***************
[2022-11-09 16:59:04,054][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 16:59:04,062][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:59:04,063][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:59:04,063][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:59:04,063][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:59:04,063][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:59:04,063][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667984344063
}
[2022-11-09 16:59:04,267][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'fiEhIeKeqqLqdsDhqjr8BAVLlmDlel1F', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:59:04,267][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:59:04,267][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 16:59:04,267][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 16:59:04,282][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:59:04,282][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:59:04,282][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:59:04,282][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:59:04,283][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:59:04,283][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667984344282
}
[2022-11-09 16:59:04,298][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:59:03.543', 'message': 'Bad user credential'} 
[2022-11-09 16:59:04,298][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:59:04,476][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:59:04,477][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:59:04,477][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:59:04,477][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:59:04,477][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:59:04,477][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667984344478
}
[2022-11-09 16:59:04,528][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:59:03.771', 'message': 'Bad user credential'} 
[2022-11-09 16:59:04,529][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:59:04,553][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:59:04,553][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 16:59:04,553][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:59:04,553][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:59:04,553][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:59:04,553][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667984344554
}
[2022-11-09 16:59:04,663][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 08:59:03.906', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 16:59:04,664][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:59:20,491][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 16:59:20,492][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 16:59:20,494][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 16:59:20,494][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 16:59:20,515][read_data.py 24][INFO]: 读到数据 ==>>  {'test_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'SMS', 200, 'api_test_account', None, None], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 16:59:20,522][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 16:59:20,523][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 16:59:20,634][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:59:20,634][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:59:20,634][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:59:20,634][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:59:20,634][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:59:20,634][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667984360635
}
[2022-11-09 16:59:20,842][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'uPnfVPaMI3Y3DBB1kFi2lWbwIt1sVQMh', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:59:20,842][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:59:20,842][test_05_email_login.py 30][INFO]: *************** Login API - login success with email 断言成功  ***************
[2022-11-09 16:59:20,842][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 16:59:20,852][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:59:20,852][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:59:20,852][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:59:20,852][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:59:20,852][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:59:20,853][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667984360852
}
[2022-11-09 16:59:21,039][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '6CUqJO1Ik26qWURjYfmFXeIpQfBCZymN', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 16:59:21,039][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 16:59:21,039][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 16:59:21,039][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 16:59:21,052][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:59:21,052][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:59:21,052][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:59:21,052][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:59:21,052][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:59:21,052][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "SMS",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667984361053
}
[2022-11-09 16:59:21,076][user.py 42][INFO]: 接口返回码是 【 500 】, 返回信息：{'timestamp': 1667984360321, 'status': 500, 'error': 'Internal Server Error', 'path': '/api/v2/public/auth/login'} 
[2022-11-09 16:59:21,076][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 16:59:21,259][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:59:21,259][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 16:59:21,259][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:59:21,259][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:59:21,259][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:59:21,260][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667984361259
}
[2022-11-09 16:59:21,291][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 08:59:20.536', 'message': 'Bad user credential'} 
[2022-11-09 16:59:21,291][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 16:59:21,314][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 16:59:21,314][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 16:59:21,314][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 16:59:21,314][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 16:59:21,314][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 16:59:21,314][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667984361314
}
[2022-11-09 16:59:21,649][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 08:59:20.664', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 16:59:21,649][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:30:31,502][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 17:30:31,503][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 17:30:31,505][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 17:30:31,505][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 17:30:31,525][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'SMS', 406, None, '1019', 'Bad user credential'], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, '1019', 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, '1019', 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 17:30:31,535][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 17:30:31,536][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 17:30:42,249][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 17:30:42,249][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 17:30:42,251][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 17:30:42,251][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 17:30:42,271][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'SMS', 406, None, '1019', 'Bad user credential'], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, '1019', 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, '1019', 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 17:30:42,272][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 17:30:42,273][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 17:30:42,353][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:30:42,353][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:30:42,354][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:30:42,354][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:30:42,354][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:30:42,354][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986242354
}
[2022-11-09 17:30:42,630][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'CZZ7hhc000Kv2K8vm2lRkIyd7O3muhbs', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:30:42,630][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:30:42,630][test_05_email_login.py 30][INFO]: *************** Login API - login success with email 断言成功  ***************
[2022-11-09 17:30:42,630][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:30:42,639][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:30:42,639][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:30:42,639][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:30:42,639][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:30:42,639][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:30:42,639][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986242639
}
[2022-11-09 17:30:42,818][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'Oafqc4ZsCnuESHhTGTVUey0Zuiq7tGFA', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:30:42,818][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:30:42,818][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 17:30:42,818][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:30:42,827][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:30:42,827][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:30:42,827][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:30:42,827][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:30:42,827][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:30:42,827][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "SMS",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986242828
}
[2022-11-09 17:30:42,843][user.py 42][INFO]: 接口返回码是 【 500 】, 返回信息：{'timestamp': 1667986242070, 'status': 500, 'error': 'Internal Server Error', 'path': '/api/v2/public/auth/login'} 
[2022-11-09 17:30:42,843][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:30:42,945][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:30:42,945][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:30:42,945][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:30:42,945][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:30:42,945][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:30:42,945][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986242945
}
[2022-11-09 17:30:42,974][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:30:42.201', 'message': 'Bad user credential'} 
[2022-11-09 17:30:42,974][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:30:42,986][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:30:42,986][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 17:30:42,986][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:30:42,986][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:30:42,986][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:30:42,986][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667986242986
}
[2022-11-09 17:30:43,091][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 09:30:42.318', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 17:30:43,091][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:35:43,707][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 17:35:43,708][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 17:35:43,709][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 17:35:43,709][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 17:35:43,730][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 406, None, '1019', 'Bad user credential'], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, '1019', 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, '1019', 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 17:35:43,743][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 17:35:43,744][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 17:35:43,852][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:35:43,852][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:35:43,852][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:35:43,852][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:35:43,852][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:35:43,853][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986543853
}
[2022-11-09 17:35:44,399][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '0oNbGU86ommbg5zjjdtZDpHkrF2xryOE', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:35:44,399][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:35:44,399][test_05_email_login.py 30][INFO]: *************** Login API - login success with email 断言成功  ***************
[2022-11-09 17:35:44,399][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:35:44,427][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:35:44,427][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:35:44,428][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:35:44,428][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:35:44,428][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:35:44,428][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986544428
}
[2022-11-09 17:35:44,585][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'USIoIio7oWYMaXQsNjAIJdU5L2McXoQ8', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:35:44,585][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:35:44,586][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 17:35:44,586][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:35:44,600][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:35:44,600][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:35:44,600][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:35:44,601][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:35:44,601][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:35:44,601][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986544601
}
[2022-11-09 17:35:44,617][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:35:43.841', 'message': 'Bad user credential'} 
[2022-11-09 17:35:44,617][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:35:44,755][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:35:44,756][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:35:44,756][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:35:44,756][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:35:44,756][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:35:44,756][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986544757
}
[2022-11-09 17:35:44,788][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:35:44.012', 'message': 'Bad user credential'} 
[2022-11-09 17:35:44,788][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:35:44,801][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:35:44,801][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 17:35:44,801][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:35:44,801][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:35:44,801][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:35:44,802][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667986544801
}
[2022-11-09 17:35:44,901][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 09:35:44.126', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 17:35:44,902][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:36:17,167][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 17:36:17,167][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 17:36:17,169][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 17:36:17,169][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 17:36:17,193][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, '1019', 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, '1019', 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 17:36:17,205][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 17:36:17,206][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 17:36:17,313][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:36:17,313][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:36:17,314][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:36:17,314][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:36:17,314][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:36:17,314][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986577314
}
[2022-11-09 17:36:17,501][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 's4oVSZbJqc7LDhIAd5fZoNzaAT0B8rli', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:36:17,501][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:36:17,501][test_05_email_login.py 30][INFO]: *************** Login API - login success with email 断言成功  ***************
[2022-11-09 17:36:17,501][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:36:17,509][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:36:17,510][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:36:17,510][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:36:17,510][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:36:17,510][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:36:17,510][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986577511
}
[2022-11-09 17:36:17,673][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'ynP788czSg7Mdb93tOGYknmKF0sShwj1', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:36:17,673][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:36:17,673][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 17:36:17,674][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:36:17,688][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:36:17,689][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:36:17,689][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:36:17,689][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:36:17,689][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:36:17,689][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986577690
}
[2022-11-09 17:36:17,705][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:36:16.929', 'message': 'Bad user credential'} 
[2022-11-09 17:36:17,706][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:36:17,951][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:36:17,952][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:36:17,952][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:36:17,952][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:36:17,952][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:36:17,952][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986577952
}
[2022-11-09 17:36:17,984][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:36:17.208', 'message': 'Bad user credential'} 
[2022-11-09 17:36:17,985][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:36:18,000][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:36:18,001][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 17:36:18,001][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:36:18,001][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:36:18,001][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:36:18,001][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667986578001
}
[2022-11-09 17:36:18,104][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 09:36:17.327', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 17:36:18,104][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:40:41,287][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 17:40:41,287][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 17:40:41,289][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 17:40:41,289][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 17:40:41,308][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, '1019', 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, '1019', 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 17:40:41,315][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 17:40:41,316][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 17:40:41,417][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:40:41,418][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:40:41,418][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:40:41,418][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:40:41,418][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:40:41,418][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986841418
}
[2022-11-09 17:40:41,622][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'X4ZW8SRQJC1rV2OtT8fzBG8He6kqO3y2', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:40:41,622][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:40:41,622][test_05_email_login.py 30][INFO]: *************** Login API - login success with email 断言成功  ***************
[2022-11-09 17:40:41,622][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:40:41,631][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:40:41,631][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:40:41,631][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:40:41,631][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:40:41,632][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:40:41,632][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986841631
}
[2022-11-09 17:40:41,799][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '3fTME8lM7O4mvQGdpbV1m7gXUsfWbOZd', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:40:41,799][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:40:41,799][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 17:40:41,799][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:40:41,819][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:40:41,820][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:40:41,820][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:40:41,820][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:40:41,820][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:40:41,820][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986841821
}
[2022-11-09 17:40:41,836][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:40:41.058', 'message': 'Bad user credential'} 
[2022-11-09 17:40:41,837][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:40:41,837][test_05_email_login.py 36][INFO]: *************** Login API - login success with sms 断言成功  ***************
[2022-11-09 17:40:41,837][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:40:41,857][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:40:41,857][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:40:41,857][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:40:41,857][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:40:41,857][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:40:41,858][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986841857
}
[2022-11-09 17:40:41,892][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:40:41.114', 'message': 'Bad user credential'} 
[2022-11-09 17:40:41,892][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:40:42,111][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:40:42,111][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 17:40:42,111][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:40:42,111][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:40:42,111][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:40:42,112][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667986842112
}
[2022-11-09 17:40:42,230][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 09:40:41.446', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 17:40:42,230][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:41:08,569][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 17:41:08,570][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 17:41:08,571][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 17:41:08,571][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 17:41:08,591][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', ' ', 'email', 406, None, '1019', 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 17:41:08,599][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 17:41:08,600][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 17:41:08,707][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:41:08,707][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:41:08,707][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:41:08,708][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:41:08,708][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:41:08,708][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986868707
}
[2022-11-09 17:41:08,933][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'IFUCR9GRng3WvKaykIyZ2mN89eTagdPQ', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:41:08,933][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:41:08,933][test_05_email_login.py 30][INFO]: *************** Login API - login success with email 断言成功  ***************
[2022-11-09 17:41:08,933][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:41:08,942][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:41:08,942][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:41:08,942][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:41:08,942][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:41:08,942][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:41:08,942][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986868942
}
[2022-11-09 17:41:09,102][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'pkxT0TKhTpcCGiH145fqGPyBaHESJFE1', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:41:09,102][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:41:09,102][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 17:41:09,102][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:41:09,111][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:41:09,111][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:41:09,111][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:41:09,112][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:41:09,112][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:41:09,112][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986869112
}
[2022-11-09 17:41:09,129][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:41:08.349', 'message': 'Bad user credential'} 
[2022-11-09 17:41:09,130][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:41:09,130][test_05_email_login.py 36][INFO]: *************** Login API - login success with sms 断言成功  ***************
[2022-11-09 17:41:09,130][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:41:09,140][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:41:09,140][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:41:09,140][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:41:09,140][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:41:09,140][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:41:09,140][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986869141
}
[2022-11-09 17:41:09,167][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:41:08.388', 'message': 'Bad user credential'} 
[2022-11-09 17:41:09,167][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:41:09,167][test_05_email_login.py 36][INFO]: *************** Login API - userIdOrEmail null 断言成功  ***************
[2022-11-09 17:41:09,168][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:41:09,192][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:41:09,192][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码： ，查看接口返回
[2022-11-09 17:41:09,192][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:41:09,192][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:41:09,193][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:41:09,193][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": " ",
    "captcha": "",
    "siteKey": 1667986869193
}
[2022-11-09 17:41:09,296][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 09:41:08.517', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 17:41:09,296][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:43:00,539][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 17:43:00,540][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 17:43:00,541][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 17:43:00,542][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 17:43:00,560][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password error', 'api_test_account', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 17:43:00,566][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 17:43:00,567][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 17:43:00,665][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:43:00,665][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:43:00,666][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:43:00,666][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:43:00,666][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:43:00,666][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986980666
}
[2022-11-09 17:43:00,891][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'WPNfhszDrqCtpUPRatipi3iNL4Xhu00b', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:43:00,891][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:43:00,891][test_05_email_login.py 30][INFO]: *************** Login API - login success with email 断言成功  ***************
[2022-11-09 17:43:00,891][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:43:00,900][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:43:00,900][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:43:00,900][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:43:00,900][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:43:00,900][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:43:00,900][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986980900
}
[2022-11-09 17:43:01,064][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'SoSZhmnGrBZubSF8nr6ekLbGeVFVqD58', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:43:01,064][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:43:01,064][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 17:43:01,064][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:43:01,073][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:43:01,073][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:43:01,073][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:43:01,073][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:43:01,073][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:43:01,073][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986981074
}
[2022-11-09 17:43:01,087][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:43:00.307', 'message': 'Bad user credential'} 
[2022-11-09 17:43:01,087][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:43:01,088][test_05_email_login.py 36][INFO]: *************** Login API - login success with sms 断言成功  ***************
[2022-11-09 17:43:01,088][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:43:01,098][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:43:01,098][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:43:01,098][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:43:01,098][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:43:01,098][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:43:01,098][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667986981099
}
[2022-11-09 17:43:01,125][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:43:00.345', 'message': 'Bad user credential'} 
[2022-11-09 17:43:01,126][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:43:01,126][test_05_email_login.py 36][INFO]: *************** Login API - userIdOrEmail null 断言成功  ***************
[2022-11-09 17:43:01,126][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:43:01,146][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:43:01,146][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：ABCabc123!，查看接口返回
[2022-11-09 17:43:01,147][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:43:01,147][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:43:01,147][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:43:01,147][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1667986981148
}
[2022-11-09 17:43:01,262][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 09:43:00.477', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 17:43:01,262][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:43:01,427][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:43:01,427][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-09 17:43:01,427][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:43:01,427][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:43:01,427][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:43:01,428][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1667986981428
}
[2022-11-09 17:43:01,458][user.py 42][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-09 09:43:00.679', 'message': 'Password is required'} 
[2022-11-09 17:43:01,458][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:43:01,458][test_05_email_login.py 36][INFO]: *************** Login API - password null 断言成功  ***************
[2022-11-09 17:43:01,458][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:44:05,995][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 17:44:05,995][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 17:44:05,997][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 17:44:05,997][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 17:44:06,017][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 17:44:06,029][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 17:44:06,030][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 17:44:06,132][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:44:06,132][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:44:06,132][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:44:06,132][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:44:06,132][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:44:06,132][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667987046132
}
[2022-11-09 17:44:06,313][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '1MowjVpAzA8JNekZR7QF8XZtIaQr59ZF', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:44:06,313][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:44:06,313][test_05_email_login.py 30][INFO]: *************** Login API - login success with email 断言成功  ***************
[2022-11-09 17:44:06,314][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:44:06,322][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:44:06,322][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:44:06,322][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:44:06,322][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:44:06,322][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:44:06,322][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667987046322
}
[2022-11-09 17:44:06,514][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'Rxg6v7nd0CpJDykJU59b3asZIeDqo5hV', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 17:44:06,514][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 17:44:06,515][test_05_email_login.py 30][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 17:44:06,515][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:44:06,523][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:44:06,523][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:44:06,523][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:44:06,523][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:44:06,523][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:44:06,523][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667987046523
}
[2022-11-09 17:44:06,537][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:44:05.756', 'message': 'Bad user credential'} 
[2022-11-09 17:44:06,537][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:44:06,537][test_05_email_login.py 36][INFO]: *************** Login API - login success with sms 断言成功  ***************
[2022-11-09 17:44:06,537][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:44:06,545][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:44:06,545][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 17:44:06,546][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:44:06,546][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:44:06,546][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:44:06,546][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667987046545
}
[2022-11-09 17:44:06,573][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 09:44:05.793', 'message': 'Bad user credential'} 
[2022-11-09 17:44:06,573][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:44:06,573][test_05_email_login.py 36][INFO]: *************** Login API - userIdOrEmail null 断言成功  ***************
[2022-11-09 17:44:06,573][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:44:06,582][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:44:06,582][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：ABCabc123!，查看接口返回
[2022-11-09 17:44:06,582][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:44:06,582][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:44:06,582][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:44:06,582][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1667987046582
}
[2022-11-09 17:44:06,681][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 09:44:05.901', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 17:44:06,681][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:44:06,681][test_05_email_login.py 36][INFO]: *************** Login API - password error 断言成功  ***************
[2022-11-09 17:44:06,681][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 17:44:06,690][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-09 17:44:06,690][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-09 17:44:06,690][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 17:44:06,690][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 17:44:06,690][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 17:44:06,691][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1667987046691
}
[2022-11-09 17:44:06,724][user.py 42][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-09 09:44:05.943', 'message': 'Password is required'} 
[2022-11-09 17:44:06,724][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 17:44:06,724][test_05_email_login.py 36][INFO]: *************** Login API - password null 断言成功  ***************
[2022-11-09 17:44:06,724][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-09 18:02:41,670][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-09 18:02:41,671][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-09 18:02:41,672][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-09 18:02:41,673][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-09 18:02:41,696][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Login API - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Login API - login success with userId', 'api_test_account', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Login API - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['Login API - userIdOrEmail null', '', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['Login API - password error', 'api_test_account', 'ABCabc123!', 'sms', 401, None, 1019, 'Bad user credential'], ['Login API - password null', 'api_test_account', '', 'sms', 400, None, 1501, 'Password is required']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-09 18:02:41,709][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-09 18:02:41,710][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-09 18:02:41,831][test_05_email_login.py 21][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:41,831][test_05_email_login.py 22][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 18:02:41,832][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:41,832][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:41,832][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:41,832][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667988161833
}
[2022-11-09 18:02:42,104][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'QLDvsXvGSaRp8oUFpLFvZg1sv3C5FCRG', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 18:02:42,104][test_05_email_login.py 27][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 18:02:42,104][test_05_email_login.py 31][INFO]: *************** Login API - login success with email 断言成功  ***************
[2022-11-09 18:02:42,105][test_05_email_login.py 39][INFO]: *************** 结束执行用例 ***************
[2022-11-09 18:02:42,113][test_05_email_login.py 21][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,114][test_05_email_login.py 22][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 18:02:42,114][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,114][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,114][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,114][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667988162114
}
[2022-11-09 18:02:42,293][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'UNmZdZkF6erRAZSYs7gqj4lcoUJMn4jY', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-09 18:02:42,293][test_05_email_login.py 27][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-09 18:02:42,293][test_05_email_login.py 31][INFO]: *************** Login API - login success with userId 断言成功  ***************
[2022-11-09 18:02:42,293][test_05_email_login.py 39][INFO]: *************** 结束执行用例 ***************
[2022-11-09 18:02:42,307][test_05_email_login.py 21][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,307][test_05_email_login.py 22][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 18:02:42,307][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,307][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,307][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,308][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667988162308
}
[2022-11-09 18:02:42,323][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 10:02:41.532', 'message': 'Bad user credential'} 
[2022-11-09 18:02:42,324][test_05_email_login.py 27][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 18:02:42,324][test_05_email_login.py 37][INFO]: *************** Login API - login success with sms 断言成功  ***************
[2022-11-09 18:02:42,324][test_05_email_login.py 39][INFO]: *************** 结束执行用例 ***************
[2022-11-09 18:02:42,339][test_05_email_login.py 21][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,339][test_05_email_login.py 22][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 18:02:42,340][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,340][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,340][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,340][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667988162341
}
[2022-11-09 18:02:42,376][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 10:02:41.584', 'message': 'Bad user credential'} 
[2022-11-09 18:02:42,376][test_05_email_login.py 27][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 18:02:42,377][test_05_email_login.py 37][INFO]: *************** Login API - userIdOrEmail null 断言成功  ***************
[2022-11-09 18:02:42,377][test_05_email_login.py 39][INFO]: *************** 结束执行用例 ***************
[2022-11-09 18:02:42,394][test_05_email_login.py 21][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,395][test_05_email_login.py 22][INFO]: 尝试登录邮箱：api_test_account，密码：ABCabc123!，查看接口返回
[2022-11-09 18:02:42,395][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,395][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,395][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,395][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1667988162396
}
[2022-11-09 18:02:42,506][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-09 10:02:41.714', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-09 18:02:42,507][test_05_email_login.py 27][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 18:02:42,507][test_05_email_login.py 37][INFO]: *************** Login API - password error 断言成功  ***************
[2022-11-09 18:02:42,507][test_05_email_login.py 39][INFO]: *************** 结束执行用例 ***************
[2022-11-09 18:02:42,525][test_05_email_login.py 21][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,525][test_05_email_login.py 22][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-09 18:02:42,525][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,525][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,525][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,526][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1667988162525
}
[2022-11-09 18:02:42,554][user.py 42][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-09 10:02:41.763', 'message': 'Password is required'} 
[2022-11-09 18:02:42,555][test_05_email_login.py 27][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 18:02:42,555][test_05_email_login.py 37][INFO]: *************** Login API - password null 断言成功  ***************
[2022-11-09 18:02:42,555][test_05_email_login.py 39][INFO]: *************** 结束执行用例 ***************
[2022-11-09 18:02:42,567][test_05_email_login.py 47][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,567][test_05_email_login.py 48][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-09 18:02:42,567][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,567][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,567][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,567][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667988162567
}
[2022-11-09 18:02:42,584][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 10:02:41.790', 'message': 'Bad user credential'} 
[2022-11-09 18:02:42,584][test_05_email_login.py 53][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 18:02:42,727][test_05_email_login.py 47][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,728][test_05_email_login.py 48][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-09 18:02:42,728][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,728][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,728][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,728][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667988162729
}
[2022-11-09 18:02:42,743][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 10:02:41.952', 'message': 'Bad user credential'} 
[2022-11-09 18:02:42,743][test_05_email_login.py 53][INFO]: 期望结果：登录成功， 实际结果：【 登录失败 】
[2022-11-09 18:02:42,761][test_05_email_login.py 47][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,761][test_05_email_login.py 48][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-09 18:02:42,761][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,761][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,761][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,761][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667988162762
}
[2022-11-09 18:02:42,776][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 10:02:41.985', 'message': 'Bad user credential'} 
[2022-11-09 18:02:42,776][test_05_email_login.py 53][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 18:02:42,776][test_05_email_login.py 63][INFO]: *************** Login API - login success with sms 断言成功  ***************
[2022-11-09 18:02:42,776][test_05_email_login.py 65][INFO]: *************** 结束执行用例 ***************
[2022-11-09 18:02:42,788][test_05_email_login.py 47][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,788][test_05_email_login.py 48][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-09 18:02:42,789][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,789][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,789][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,789][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1667988162790
}
[2022-11-09 18:02:42,803][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 10:02:42.012', 'message': 'Bad user credential'} 
[2022-11-09 18:02:42,803][test_05_email_login.py 53][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 18:02:42,803][test_05_email_login.py 63][INFO]: *************** Login API - userIdOrEmail null 断言成功  ***************
[2022-11-09 18:02:42,803][test_05_email_login.py 65][INFO]: *************** 结束执行用例 ***************
[2022-11-09 18:02:42,817][test_05_email_login.py 47][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,817][test_05_email_login.py 48][INFO]: 尝试登录邮箱：api_test_account，密码：ABCabc123!，查看接口返回
[2022-11-09 18:02:42,817][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,817][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,817][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,817][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "sms",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1667988162818
}
[2022-11-09 18:02:42,832][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 10:02:42.040', 'message': 'Bad user credential'} 
[2022-11-09 18:02:42,832][test_05_email_login.py 53][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-09 18:02:42,851][test_05_email_login.py 47][INFO]: *************** 开始执行用例 ***************
[2022-11-09 18:02:42,851][test_05_email_login.py 48][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-09 18:02:42,851][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-09 18:02:42,851][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-09 18:02:42,851][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-09 18:02:42,851][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "sms",
    "password": "",
    "captcha": "",
    "siteKey": 1667988162852
}
[2022-11-09 18:02:42,866][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-09 10:02:42.074', 'message': 'Bad user credential'} 
[2022-11-09 18:02:42,866][test_05_email_login.py 53][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
