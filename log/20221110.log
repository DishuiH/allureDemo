[2022-11-10 09:43:06,900][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 09:43:06,901][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 09:43:06,903][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 09:43:06,903][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 09:43:06,924][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber - login success with sms', '+33757130211', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Phonenumber - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Phonenumber - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['Phonenumber - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 09:43:06,926][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 09:43:06,927][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 09:51:51,268][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 09:51:51,269][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 09:51:51,270][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 09:51:51,270][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 09:51:51,292][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Phonenumber Login - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Phonenumber Login - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 09:51:51,303][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 09:51:51,304][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 12:55:26,531][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 12:55:26,532][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 12:55:26,534][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 12:55:26,534][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 12:55:26,556][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Phonenumber Login - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Phonenumber Login - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 12:55:26,563][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 12:55:26,564][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 12:56:13,752][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 12:56:13,753][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 12:56:13,754][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 12:56:13,754][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 12:56:13,775][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Phonenumber Login - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['Phonenumber Login - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 12:56:13,778][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 12:56:13,779][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 12:56:13,865][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 12:56:13,865][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-10 12:56:13,865][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 12:56:13,865][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 12:56:13,865][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 12:56:13,865][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056173865
}
[2022-11-10 12:56:14,193][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '2wnk8tQfToEZtJXHAb3TgmaqK6lKOoX8', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 12:56:14,193][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 12:56:14,193][test_05_email_login.py 30][INFO]: *************** IDorEmail Login API - login success with email 断言成功  ***************
[2022-11-10 12:56:14,193][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 12:56:14,207][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 12:56:14,207][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 12:56:14,207][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 12:56:14,207][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 12:56:14,207][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 12:56:14,207][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056174208
}
[2022-11-10 12:56:14,409][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': '3mIYn4M6Fcytg5BAZ9PE1WqhynPu8ZrS', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 12:56:14,409][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 12:56:14,410][test_05_email_login.py 30][INFO]: *************** IDorEmail - login success with userId 断言成功  ***************
[2022-11-10 12:56:14,410][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 12:56:14,423][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 12:56:14,423][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 12:56:14,424][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 12:56:14,424][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 12:56:14,424][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 12:56:14,424][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056174424
}
[2022-11-10 12:56:14,443][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 04:56:13.071', 'message': 'Bad user credential'} 
[2022-11-10 12:56:14,443][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 12:56:14,443][test_05_email_login.py 36][INFO]: *************** IDorEmail - logintype error 断言成功  ***************
[2022-11-10 12:56:14,443][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 12:56:14,456][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 12:56:14,456][test_05_email_login.py 21][INFO]: 尝试登录邮箱：abcabc，密码：ABCabc123!，查看接口返回
[2022-11-10 12:56:14,456][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 12:56:14,456][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 12:56:14,456][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 12:56:14,456][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "abcabc",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668056174456
}
[2022-11-10 12:56:14,489][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 04:56:13.120', 'message': 'Bad user credential'} 
[2022-11-10 12:56:14,489][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 12:56:14,489][test_05_email_login.py 36][INFO]: *************** IDorEmail - account is not exit 断言成功  ***************
[2022-11-10 12:56:14,489][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 12:56:14,505][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 12:56:14,506][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 12:56:14,506][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 12:56:14,506][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 12:56:14,506][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 12:56:14,506][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056174506
}
[2022-11-10 12:56:14,537][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 04:56:13.168', 'message': 'Bad user credential'} 
[2022-11-10 12:56:14,537][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 12:56:14,537][test_05_email_login.py 36][INFO]: *************** IDorEmail - userIdOrEmail null 断言成功  ***************
[2022-11-10 12:56:14,537][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 12:56:14,551][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 12:56:14,551][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：ABCabc123!，查看接口返回
[2022-11-10 12:56:14,551][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 12:56:14,551][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 12:56:14,551][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 12:56:14,551][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668056174551
}
[2022-11-10 12:56:14,666][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 04:56:13.297', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 12:56:14,666][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 12:56:14,666][test_05_email_login.py 36][INFO]: *************** IDorEmail - password error 断言成功  ***************
[2022-11-10 12:56:14,666][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 12:56:14,676][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 12:56:14,676][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-10 12:56:14,676][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 12:56:14,676][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 12:56:14,676][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 12:56:14,676][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1668056174677
}
[2022-11-10 12:56:14,721][user.py 42][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-10 04:56:13.352', 'message': 'Password is required'} 
[2022-11-10 12:56:14,721][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 12:56:14,721][test_05_email_login.py 36][INFO]: *************** IDorEmail - password null 断言成功  ***************
[2022-11-10 12:56:14,721][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:05:01,881][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 13:05:01,882][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 13:05:01,883][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 13:05:01,883][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 13:05:01,904][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Phonenumber Login - login fail with userId', 'api_test_account', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - phoneNumber null', '', 'P@ssw0rd', 'sms', 400, None, 1080, 'The account is temporarily locked because of too many failures'], ['Phonenumber Login - password error', '+33757130211', 'ABCabc123!', 'sms', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 13:05:01,918][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 13:05:01,919][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 13:05:02,024][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:05:02,024][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:05:02,024][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:05:02,024][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:05:02,024][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:05:02,024][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056702024
}
[2022-11-10 13:05:02,251][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'fpbny3hChygx8LkYFCao5QOlfeOJpYcr', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:05:02,251][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:05:02,251][test_05_email_login.py 30][INFO]: *************** IDorEmail Login API - login success with email 断言成功  ***************
[2022-11-10 13:05:02,251][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:05:02,261][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:05:02,261][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:05:02,261][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:05:02,261][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:05:02,261][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:05:02,261][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056702261
}
[2022-11-10 13:05:02,461][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'ovKmuuefl9NIl8i2wb13ez1MW1bvKW4u', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:05:02,462][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:05:02,462][test_05_email_login.py 30][INFO]: *************** IDorEmail - login success with userId 断言成功  ***************
[2022-11-10 13:05:02,462][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:05:02,470][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:05:02,471][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:05:02,471][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:05:02,471][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:05:02,471][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:05:02,471][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056702471
}
[2022-11-10 13:05:02,485][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:05:01.114', 'message': 'Bad user credential'} 
[2022-11-10 13:05:02,485][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:05:02,485][test_05_email_login.py 36][INFO]: *************** IDorEmail - logintype error 断言成功  ***************
[2022-11-10 13:05:02,485][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:05:02,494][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:05:02,494][test_05_email_login.py 21][INFO]: 尝试登录邮箱：abcabc，密码：ABCabc123!，查看接口返回
[2022-11-10 13:05:02,495][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:05:02,495][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:05:02,495][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:05:02,495][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "abcabc",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668056702495
}
[2022-11-10 13:05:02,527][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:05:01.156', 'message': 'Bad user credential'} 
[2022-11-10 13:05:02,527][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:05:02,527][test_05_email_login.py 36][INFO]: *************** IDorEmail - account is not exit 断言成功  ***************
[2022-11-10 13:05:02,527][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:05:02,536][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:05:02,536][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:05:02,536][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:05:02,536][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:05:02,536][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:05:02,536][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056702537
}
[2022-11-10 13:05:02,564][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:05:01.193', 'message': 'Bad user credential'} 
[2022-11-10 13:05:02,564][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:05:02,564][test_05_email_login.py 36][INFO]: *************** IDorEmail - userIdOrEmail null 断言成功  ***************
[2022-11-10 13:05:02,564][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:05:02,573][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:05:02,573][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：ABCabc123!，查看接口返回
[2022-11-10 13:05:02,573][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:05:02,573][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:05:02,573][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:05:02,573][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668056702574
}
[2022-11-10 13:05:02,684][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 05:05:01.314', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 13:05:02,685][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:05:02,685][test_05_email_login.py 36][INFO]: *************** IDorEmail - password error 断言成功  ***************
[2022-11-10 13:05:02,685][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:05:02,693][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:05:02,693][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-10 13:05:02,693][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:05:02,693][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:05:02,693][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:05:02,693][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1668056702693
}
[2022-11-10 13:05:02,726][user.py 42][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-10 05:05:01.355', 'message': 'Password is required'} 
[2022-11-10 13:05:02,726][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:05:02,726][test_05_email_login.py 36][INFO]: *************** IDorEmail - password null 断言成功  ***************
[2022-11-10 13:05:02,726][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:07:09,877][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 13:07:09,878][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 13:07:09,879][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 13:07:09,879][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 13:07:09,900][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Phonenumber Login - login fail with userId', 'api_test_account', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - phoneNumber null', '', 'P@ssw0rd', 'sms', 400, None, 1080, 'The account is temporarily locked because of too many failures'], ['Phonenumber Login - password error', '+33757130211', 'ABCabc123!', 'sms', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 13:07:09,902][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 13:07:09,903][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 13:07:10,010][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:07:10,010][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:07:10,010][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:07:10,010][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:07:10,010][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:07:10,010][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056830010
}
[2022-11-10 13:07:10,286][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'YL1sngla8HVSAnmnj5DPspNyUN14e6SE', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:07:10,286][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:07:10,287][test_05_email_login.py 30][INFO]: *************** IDorEmail Login API - login success with email 断言成功  ***************
[2022-11-10 13:07:10,287][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:07:10,294][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:07:10,295][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:07:10,295][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:07:10,295][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:07:10,295][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:07:10,295][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056830296
}
[2022-11-10 13:07:10,484][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'WwlKZrRgg2g5djkdaG1iAbdMnKotr6bD', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:07:10,484][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:07:10,484][test_05_email_login.py 30][INFO]: *************** IDorEmail - login success with userId 断言成功  ***************
[2022-11-10 13:07:10,484][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:07:10,496][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:07:10,496][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:07:10,497][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:07:10,497][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:07:10,498][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:07:10,498][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056830497
}
[2022-11-10 13:07:10,521][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:07:09.142', 'message': 'Bad user credential'} 
[2022-11-10 13:07:10,521][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:07:10,521][test_05_email_login.py 36][INFO]: *************** IDorEmail - logintype error 断言成功  ***************
[2022-11-10 13:07:10,521][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:07:10,541][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:07:10,541][test_05_email_login.py 21][INFO]: 尝试登录邮箱：abcabc，密码：ABCabc123!，查看接口返回
[2022-11-10 13:07:10,541][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:07:10,541][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:07:10,542][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:07:10,542][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "abcabc",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668056830541
}
[2022-11-10 13:07:10,587][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:07:09.215', 'message': 'Bad user credential'} 
[2022-11-10 13:07:10,588][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:07:10,588][test_05_email_login.py 36][INFO]: *************** IDorEmail - account is not exit 断言成功  ***************
[2022-11-10 13:07:10,588][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:07:10,601][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:07:10,601][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:07:10,601][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:07:10,602][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:07:10,602][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:07:10,602][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056830601
}
[2022-11-10 13:07:10,635][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:07:09.263', 'message': 'Bad user credential'} 
[2022-11-10 13:07:10,635][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:07:10,636][test_05_email_login.py 36][INFO]: *************** IDorEmail - userIdOrEmail null 断言成功  ***************
[2022-11-10 13:07:10,636][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:07:10,648][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:07:10,648][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：ABCabc123!，查看接口返回
[2022-11-10 13:07:10,648][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:07:10,648][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:07:10,649][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:07:10,649][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668056830649
}
[2022-11-10 13:07:10,768][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 05:07:09.396', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 13:07:10,768][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:07:10,768][test_05_email_login.py 36][INFO]: *************** IDorEmail - password error 断言成功  ***************
[2022-11-10 13:07:10,768][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:07:10,781][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:07:10,781][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-10 13:07:10,781][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:07:10,781][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:07:10,781][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:07:10,781][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1668056830782
}
[2022-11-10 13:07:10,835][user.py 42][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-10 05:07:09.445', 'message': 'Password is required'} 
[2022-11-10 13:07:10,836][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:07:10,836][test_05_email_login.py 36][INFO]: *************** IDorEmail - password null 断言成功  ***************
[2022-11-10 13:07:10,836][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:09:27,981][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 13:09:27,982][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 13:09:27,983][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 13:09:27,983][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 13:09:28,005][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Phonenumber Login - login fail with userId', 'api_test_account', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - phoneNumber null', '', 'P@ssw0rd', 'sms', 400, None, 1080, 'The account is temporarily locked because of too many failures'], ['Phonenumber Login - password error', '+33757130211', 'ABCabc123!', 'sms', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required'], ['Phonenumber Login - account is not exit', '+8618800000000', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 13:09:28,016][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 13:09:28,017][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 13:09:28,116][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:09:28,116][test_05_email_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:09:28,116][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:09:28,116][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:09:28,116][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:09:28,116][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056968116
}
[2022-11-10 13:09:28,325][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'fvfg7dLdwVgOCWZOu3wqhF4XqsEQFM43', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:09:28,325][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:09:28,325][test_05_email_login.py 30][INFO]: *************** IDorEmail Login API - login success with email 断言成功  ***************
[2022-11-10 13:09:28,325][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:09:28,334][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:09:28,334][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:09:28,334][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:09:28,334][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:09:28,334][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:09:28,334][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056968335
}
[2022-11-10 13:09:28,541][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'hxens2aM4gaUUAtHpobRd54wXrMs82ea', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:09:28,541][test_05_email_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:09:28,541][test_05_email_login.py 30][INFO]: *************** IDorEmail - login success with userId 断言成功  ***************
[2022-11-10 13:09:28,541][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:09:28,549][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:09:28,550][test_05_email_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:09:28,550][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:09:28,550][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:09:28,550][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:09:28,550][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056968551
}
[2022-11-10 13:09:28,567][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:09:27.193', 'message': 'Bad user credential'} 
[2022-11-10 13:09:28,567][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:09:28,567][test_05_email_login.py 36][INFO]: *************** IDorEmail - logintype error 断言成功  ***************
[2022-11-10 13:09:28,567][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:09:28,577][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:09:28,577][test_05_email_login.py 21][INFO]: 尝试登录邮箱：abcabc，密码：ABCabc123!，查看接口返回
[2022-11-10 13:09:28,577][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:09:28,577][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:09:28,577][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:09:28,577][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "abcabc",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668056968578
}
[2022-11-10 13:09:28,607][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:09:27.234', 'message': 'Bad user credential'} 
[2022-11-10 13:09:28,608][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:09:28,608][test_05_email_login.py 36][INFO]: *************** IDorEmail - account is not exit 断言成功  ***************
[2022-11-10 13:09:28,608][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:09:28,616][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:09:28,616][test_05_email_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:09:28,616][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:09:28,616][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:09:28,616][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:09:28,616][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668056968616
}
[2022-11-10 13:09:28,648][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:09:27.275', 'message': 'Bad user credential'} 
[2022-11-10 13:09:28,648][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:09:28,648][test_05_email_login.py 36][INFO]: *************** IDorEmail - userIdOrEmail null 断言成功  ***************
[2022-11-10 13:09:28,648][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:09:28,657][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:09:28,658][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：ABCabc123!，查看接口返回
[2022-11-10 13:09:28,658][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:09:28,658][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:09:28,658][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:09:28,658][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668056968658
}
[2022-11-10 13:09:28,765][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 05:09:27.392', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 13:09:28,766][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:09:28,766][test_05_email_login.py 36][INFO]: *************** IDorEmail - password error 断言成功  ***************
[2022-11-10 13:09:28,766][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:09:28,774][test_05_email_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:09:28,774][test_05_email_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-10 13:09:28,774][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:09:28,775][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:09:28,775][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:09:28,775][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1668056968774
}
[2022-11-10 13:09:28,806][user.py 42][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-10 05:09:27.432', 'message': 'Password is required'} 
[2022-11-10 13:09:28,806][test_05_email_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:09:28,806][test_05_email_login.py 36][INFO]: *************** IDorEmail - password null 断言成功  ***************
[2022-11-10 13:09:28,806][test_05_email_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:10:10,096][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 13:10:10,097][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 13:10:10,098][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 13:10:10,098][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 13:10:10,120][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Phonenumber Login - login fail with userId', 'api_test_account', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - phoneNumber null', '', 'P@ssw0rd', 'sms', 400, None, 1080, 'The account is temporarily locked because of too many failures'], ['Phonenumber Login - password error', '+33757130211', 'ABCabc123!', 'sms', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required'], ['Phonenumber Login - account is not exit', '+8618800000000', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 13:10:10,121][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 13:10:10,122][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 13:10:10,220][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:10,220][test_05_login.py 46][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:10:10,220][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:10,220][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:10,220][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:10,220][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057010221
}
[2022-11-10 13:10:10,429][user.py 61][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'mcat2eQj9O8GVehptbUwrTgI2wXSUMkI', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:10:10,429][test_05_login.py 51][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:10:10,429][test_05_login.py 55][INFO]: *************** Phonenumber Login - login success with sms 断言成功  ***************
[2022-11-10 13:10:10,429][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:10:10,438][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:10,438][test_05_login.py 46][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:10:10,438][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:10,439][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:10,439][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:10,439][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057010439
}
[2022-11-10 13:10:10,459][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:10:09.081', 'message': 'Bad user credential'} 
[2022-11-10 13:10:10,459][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:10:10,459][test_05_login.py 61][INFO]: *************** Phonenumber Login - login fail with userId 断言成功  ***************
[2022-11-10 13:10:10,459][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:10:10,468][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:10,468][test_05_login.py 46][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:10:10,468][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:10,468][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:10,468][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:10,468][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057010469
}
[2022-11-10 13:10:10,490][user.py 61][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1080, 'timestamp': '2022-11-10 05:10:09.117', 'message': 'The account is temporarily locked because of too many failures', 'errorData': {'lockedTill': 1668070806}} 
[2022-11-10 13:10:10,490][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:10:10,490][test_05_login.py 61][INFO]: *************** Phonenumber Login - phoneNumber null 断言成功  ***************
[2022-11-10 13:10:10,490][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:10:10,499][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:10,499][test_05_login.py 46][INFO]: 尝试登录邮箱：+33757130211，密码：ABCabc123!，查看接口返回
[2022-11-10 13:10:10,499][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:10,499][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:10,499][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:10,500][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668057010499
}
[2022-11-10 13:10:10,602][user.py 61][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 05:10:09.229', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 13:10:10,602][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:10:10,603][test_05_login.py 61][INFO]: *************** Phonenumber Login - password error 断言成功  ***************
[2022-11-10 13:10:10,603][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:10:10,611][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:10,611][test_05_login.py 46][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-10 13:10:10,611][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:10,611][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:10,611][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:10,611][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1668057010612
}
[2022-11-10 13:10:10,625][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:10:09.253', 'message': 'Bad user credential'} 
[2022-11-10 13:10:10,625][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:10:10,708][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:10,708][test_05_login.py 46][INFO]: 尝试登录邮箱：+8618800000000，密码：ABCabc123!，查看接口返回
[2022-11-10 13:10:10,708][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:10,708][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:10,708][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:10,708][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+8618800000000",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668057010709
}
[2022-11-10 13:10:10,724][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:10:09.351', 'message': 'Bad user credential'} 
[2022-11-10 13:10:10,725][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:10:10,725][test_05_login.py 61][INFO]: *************** Phonenumber Login - account is not exit 断言成功  ***************
[2022-11-10 13:10:10,725][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:10:46,057][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 13:10:46,058][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 13:10:46,059][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 13:10:46,059][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 13:10:46,081][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Phonenumber Login - login fail with userId', 'api_test_account', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - phoneNumber null', '', 'P@ssw0rd', 'sms', 400, None, 1080, 'The account is temporarily locked because of too many failures'], ['Phonenumber Login - password error', '+33757130211', 'ABCabc123!', 'sms', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required'], ['Phonenumber Login - account is not exit', '+8618800000000', 'ABCabc123!', 'sms', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 13:10:46,083][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 13:10:46,084][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 13:10:46,183][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:46,183][test_05_login.py 46][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:10:46,183][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:46,183][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:46,183][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:46,183][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057046184
}
[2022-11-10 13:10:46,431][user.py 61][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'Jk5B6iMkakemhqouYH4TtcePEMrB3KPu', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:10:46,432][test_05_login.py 51][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:10:46,432][test_05_login.py 55][INFO]: *************** Phonenumber Login - login success with sms 断言成功  ***************
[2022-11-10 13:10:46,432][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:10:46,440][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:46,441][test_05_login.py 46][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:10:46,441][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:46,441][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:46,441][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:46,441][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057046441
}
[2022-11-10 13:10:46,469][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:10:45.082', 'message': 'Bad user credential'} 
[2022-11-10 13:10:46,469][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:10:46,469][test_05_login.py 61][INFO]: *************** Phonenumber Login - login fail with userId 断言成功  ***************
[2022-11-10 13:10:46,469][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:10:46,478][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:46,479][test_05_login.py 46][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:10:46,479][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:46,479][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:46,479][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:46,479][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057046480
}
[2022-11-10 13:10:46,727][user.py 61][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1080, 'timestamp': '2022-11-10 05:10:45.135', 'message': 'The account is temporarily locked because of too many failures', 'errorData': {'lockedTill': 1668070806}} 
[2022-11-10 13:10:46,728][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:10:46,728][test_05_login.py 61][INFO]: *************** Phonenumber Login - phoneNumber null 断言成功  ***************
[2022-11-10 13:10:46,728][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:10:46,738][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:46,739][test_05_login.py 46][INFO]: 尝试登录邮箱：+33757130211，密码：ABCabc123!，查看接口返回
[2022-11-10 13:10:46,739][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:46,739][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:46,739][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:46,739][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668057046740
}
[2022-11-10 13:10:46,861][user.py 61][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 05:10:45.480', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 13:10:46,861][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:10:46,862][test_05_login.py 61][INFO]: *************** Phonenumber Login - password error 断言成功  ***************
[2022-11-10 13:10:46,862][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:10:46,873][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:46,873][test_05_login.py 46][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-10 13:10:46,873][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:46,873][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:46,873][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:46,874][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1668057046873
}
[2022-11-10 13:10:46,894][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:10:45.516', 'message': 'Bad user credential'} 
[2022-11-10 13:10:46,895][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:10:46,998][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:10:46,998][test_05_login.py 46][INFO]: 尝试登录邮箱：+8618800000000，密码：ABCabc123!，查看接口返回
[2022-11-10 13:10:46,998][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:10:46,998][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:10:46,998][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:10:46,999][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+8618800000000",
    "loginType": "sms",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668057046999
}
[2022-11-10 13:10:47,017][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:10:45.644', 'message': 'Bad user credential'} 
[2022-11-10 13:10:47,017][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:10:47,017][test_05_login.py 61][INFO]: *************** Phonenumber Login - account is not exit 断言成功  ***************
[2022-11-10 13:10:47,017][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:11:20,550][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 13:11:20,551][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 13:11:20,552][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 13:11:20,553][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 13:11:20,574][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Phonenumber Login - login fail with userId', 'api_test_account', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - phoneNumber null', '', 'P@ssw0rd', 'sms', 400, None, 1080, 'The account is temporarily locked because of too many failures'], ['Phonenumber Login - password error', '+33757130211', 'ABCabc123!', 'sms', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', '+33757130211', '', 'sms', 400, None, 1501, 'Password is required'], ['Phonenumber Login - account is not exit', '+8618800000000', 'ABCabc123!', 'sms', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 13:11:20,585][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 13:11:20,585][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 13:11:20,684][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:11:20,684][test_05_login.py 46][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:11:20,684][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:11:20,684][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:11:20,684][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:11:20,685][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057080684
}
[2022-11-10 13:11:20,879][user.py 61][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'sdCCvrnPoB0tOzphiSuJaq7R7dC4orUx', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:11:20,879][test_05_login.py 51][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:11:20,879][test_05_login.py 55][INFO]: *************** Phonenumber Login - login success with sms 断言成功  ***************
[2022-11-10 13:11:20,879][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:11:20,887][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:11:20,887][test_05_login.py 46][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:11:20,887][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:11:20,887][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:11:20,887][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:11:20,887][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057080887
}
[2022-11-10 13:11:20,906][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:11:19.532', 'message': 'Bad user credential'} 
[2022-11-10 13:11:20,906][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:11:20,906][test_05_login.py 61][INFO]: *************** Phonenumber Login - login fail with userId 断言成功  ***************
[2022-11-10 13:11:20,906][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:11:20,915][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:11:20,915][test_05_login.py 46][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:11:20,915][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:11:20,915][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:11:20,916][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:11:20,916][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057080916
}
[2022-11-10 13:11:20,936][user.py 61][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1080, 'timestamp': '2022-11-10 05:11:19.563', 'message': 'The account is temporarily locked because of too many failures', 'errorData': {'lockedTill': 1668070806}} 
[2022-11-10 13:11:20,936][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:11:20,936][test_05_login.py 61][INFO]: *************** Phonenumber Login - phoneNumber null 断言成功  ***************
[2022-11-10 13:11:20,936][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:11:20,945][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:11:20,945][test_05_login.py 46][INFO]: 尝试登录邮箱：+33757130211，密码：ABCabc123!，查看接口返回
[2022-11-10 13:11:20,945][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:11:20,945][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:11:20,945][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:11:20,946][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668057080946
}
[2022-11-10 13:11:21,066][user.py 61][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 05:11:19.693', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 13:11:21,067][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:11:21,067][test_05_login.py 61][INFO]: *************** Phonenumber Login - password error 断言成功  ***************
[2022-11-10 13:11:21,067][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:11:21,076][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:11:21,077][test_05_login.py 46][INFO]: 尝试登录邮箱：+33757130211，密码：，查看接口返回
[2022-11-10 13:11:21,077][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:11:21,077][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:11:21,077][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:11:21,077][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "",
    "captcha": "",
    "siteKey": 1668057081077
}
[2022-11-10 13:11:21,098][user.py 61][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-10 05:11:19.725', 'message': 'Password is required'} 
[2022-11-10 13:11:21,098][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:11:21,098][test_05_login.py 61][INFO]: *************** Phonenumber Login - password null 断言成功  ***************
[2022-11-10 13:11:21,098][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:11:21,106][test_05_login.py 45][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:11:21,106][test_05_login.py 46][INFO]: 尝试登录邮箱：+8618800000000，密码：ABCabc123!，查看接口返回
[2022-11-10 13:11:21,106][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:11:21,106][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:11:21,107][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:11:21,107][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+8618800000000",
    "loginType": "sms",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668057081107
}
[2022-11-10 13:11:21,127][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:11:19.753', 'message': 'Bad user credential'} 
[2022-11-10 13:11:21,128][test_05_login.py 51][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:11:21,128][test_05_login.py 61][INFO]: *************** Phonenumber Login - account is not exit 断言成功  ***************
[2022-11-10 13:11:21,128][test_05_login.py 63][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:28,420][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 13:12:28,421][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 13:12:28,422][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 13:12:28,422][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 13:12:28,444][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Phonenumber Login - login fail with userId', 'api_test_account', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - phoneNumber null', '', 'P@ssw0rd', 'sms', 400, None, 1080, 'The account is temporarily locked because of too many failures'], ['Phonenumber Login - password error', '+33757130211', 'ABCabc123!', 'sms', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', '+33757130211', '', 'sms', 400, None, 1501, 'Password is required'], ['Phonenumber Login - account is not exit', '+8618800000000', 'ABCabc123!', 'sms', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 13:12:28,458][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 13:12:28,459][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 13:12:28,565][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:28,565][test_05_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:12:28,565][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:28,565][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:28,565][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:28,565][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057148565
}
[2022-11-10 13:12:28,761][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'DQicHGtw8FuiQYWBeKCNbXETc8LVCbVb', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:12:28,761][test_05_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:12:28,761][test_05_login.py 30][INFO]: *************** IDorEmail Login API - login success with email 断言成功  ***************
[2022-11-10 13:12:28,762][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:28,770][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:28,770][test_05_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:12:28,770][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:28,770][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:28,770][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:28,770][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057148770
}
[2022-11-10 13:12:28,938][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'wE53ufwC6O2RuM7HX7YwcUux9J75WIe4', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:12:28,938][test_05_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:12:28,938][test_05_login.py 30][INFO]: *************** IDorEmail - login success with userId 断言成功  ***************
[2022-11-10 13:12:28,938][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:28,948][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:28,948][test_05_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:12:28,948][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:28,948][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:28,948][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:28,948][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057148948
}
[2022-11-10 13:12:28,963][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:12:27.589', 'message': 'Bad user credential'} 
[2022-11-10 13:12:28,963][test_05_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:12:28,964][test_05_login.py 36][INFO]: *************** IDorEmail - logintype error 断言成功  ***************
[2022-11-10 13:12:28,964][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:28,972][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:28,972][test_05_login.py 21][INFO]: 尝试登录邮箱：abcabc，密码：ABCabc123!，查看接口返回
[2022-11-10 13:12:28,972][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:28,972][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:28,972][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:28,972][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "abcabc",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668057148973
}
[2022-11-10 13:12:29,001][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:12:27.627', 'message': 'Bad user credential'} 
[2022-11-10 13:12:29,002][test_05_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:12:29,002][test_05_login.py 36][INFO]: *************** IDorEmail - account is not exit 断言成功  ***************
[2022-11-10 13:12:29,002][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:29,012][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:29,012][test_05_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:12:29,012][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:29,012][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:29,012][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:29,012][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057149012
}
[2022-11-10 13:12:29,057][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:12:27.680', 'message': 'Bad user credential'} 
[2022-11-10 13:12:29,057][test_05_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:12:29,057][test_05_login.py 36][INFO]: *************** IDorEmail - userIdOrEmail null 断言成功  ***************
[2022-11-10 13:12:29,057][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:29,072][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:29,072][test_05_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：ABCabc123!，查看接口返回
[2022-11-10 13:12:29,073][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:29,073][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:29,073][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:29,073][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668057149073
}
[2022-11-10 13:12:29,183][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 05:12:27.808', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 13:12:29,183][test_05_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:12:29,183][test_05_login.py 36][INFO]: *************** IDorEmail - password error 断言成功  ***************
[2022-11-10 13:12:29,183][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:29,199][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:29,199][test_05_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-10 13:12:29,199][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:29,199][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:29,199][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:29,199][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1668057149199
}
[2022-11-10 13:12:29,233][user.py 42][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-10 05:12:27.857', 'message': 'Password is required'} 
[2022-11-10 13:12:29,233][test_05_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:12:29,233][test_05_login.py 36][INFO]: *************** IDorEmail - password null 断言成功  ***************
[2022-11-10 13:12:29,233][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:29,245][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:29,245][test_05_login.py 47][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:12:29,245][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:29,246][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:29,246][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:29,246][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057149246
}
[2022-11-10 13:12:29,404][user.py 61][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'KoyLO3NPn00pOD3SnpF6TNwaaTxjUOww', 'mfaEnabled': True, 'email': 'leroxa1039@fgvod.com', 'phoneNumber': '+33757130211', 'emailVerified': True, 'phoneNumberVerified': True, 'totpConfigured': True, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 13:12:29,404][test_05_login.py 52][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 13:12:29,404][test_05_login.py 56][INFO]: *************** Phonenumber Login - login success with sms 断言成功  ***************
[2022-11-10 13:12:29,404][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:29,415][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:29,415][test_05_login.py 47][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:12:29,416][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:29,416][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:29,416][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:29,416][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057149417
}
[2022-11-10 13:12:29,433][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:12:28.060', 'message': 'Bad user credential'} 
[2022-11-10 13:12:29,433][test_05_login.py 52][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:12:29,434][test_05_login.py 62][INFO]: *************** Phonenumber Login - login fail with userId 断言成功  ***************
[2022-11-10 13:12:29,434][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:29,445][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:29,445][test_05_login.py 47][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 13:12:29,446][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:29,446][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:29,446][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:29,446][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668057149447
}
[2022-11-10 13:12:29,469][user.py 61][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1080, 'timestamp': '2022-11-10 05:12:28.096', 'message': 'The account is temporarily locked because of too many failures', 'errorData': {'lockedTill': 1668070806}} 
[2022-11-10 13:12:29,470][test_05_login.py 52][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:12:29,470][test_05_login.py 62][INFO]: *************** Phonenumber Login - phoneNumber null 断言成功  ***************
[2022-11-10 13:12:29,470][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:29,482][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:29,483][test_05_login.py 47][INFO]: 尝试登录邮箱：+33757130211，密码：ABCabc123!，查看接口返回
[2022-11-10 13:12:29,483][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:29,483][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:29,483][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:29,483][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668057149484
}
[2022-11-10 13:12:29,578][user.py 61][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 05:12:28.204', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 13:12:29,578][test_05_login.py 52][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:12:29,578][test_05_login.py 62][INFO]: *************** Phonenumber Login - password error 断言成功  ***************
[2022-11-10 13:12:29,578][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:29,587][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:29,588][test_05_login.py 47][INFO]: 尝试登录邮箱：+33757130211，密码：，查看接口返回
[2022-11-10 13:12:29,588][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:29,588][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:29,588][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:29,588][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "",
    "captcha": "",
    "siteKey": 1668057149588
}
[2022-11-10 13:12:29,610][user.py 61][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-10 05:12:28.236', 'message': 'Password is required'} 
[2022-11-10 13:12:29,610][test_05_login.py 52][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:12:29,610][test_05_login.py 62][INFO]: *************** Phonenumber Login - password null 断言成功  ***************
[2022-11-10 13:12:29,610][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 13:12:29,619][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 13:12:29,620][test_05_login.py 47][INFO]: 尝试登录邮箱：+8618800000000，密码：ABCabc123!，查看接口返回
[2022-11-10 13:12:29,620][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 13:12:29,620][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 13:12:29,620][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 13:12:29,620][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+8618800000000",
    "loginType": "sms",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668057149620
}
[2022-11-10 13:12:29,638][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 05:12:28.264', 'message': 'Bad user credential'} 
[2022-11-10 13:12:29,639][test_05_login.py 52][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 13:12:29,639][test_05_login.py 62][INFO]: *************** Phonenumber Login - account is not exit 断言成功  ***************
[2022-11-10 13:12:29,639][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:23,758][read_data.py 35][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\config\sit_setting.ini 文件......
[2022-11-10 15:23:23,758][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\base_data.yml 文件......
[2022-11-10 15:23:23,760][read_data.py 24][INFO]: 读到数据 ==>>  {'init_admin_user': {'username': 'shawn.xiao2', 'password': 'P@ssw0rd'}, 'api_user': {'username': 'api_test_account', 'password': 'P@ssw0rd'}, 'register_sql': {'insert_delete_user': ["INSERT INTO `markov_user`.`markov_user_info` (`id`, `email`, `password`, `nickname`, `avatar`, `third_uni`, `third_uni_hash`, `register_type`, `gender`, `type`, `gmt_create`, `gmt_modify`, `is_delete`) VALUES (40, 'Timekettle@icloud.com', '123456', 'Timekettle@icloud.com', NULL, NULL, 0, 5, 0, 1, '2022-06-13 11:18:47', '2022-06-13 11:18:47', 0);"], 'delete_register_user': "DELETE FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", 'select_register_user': ["SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud.com';", "SELECT * FROM markov_user_info WHERE email = 'Timekettle@icloud1.com';"]}} 
[2022-11-10 15:23:23,760][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\api_test_data.yml 文件......
[2022-11-10 15:23:23,782][read_data.py 24][INFO]: 读到数据 ==>>  {'test_userIdOrEmail_login': [['IDorEmail Login API - login success with email', 'leroxa1039@fgvod.com', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - login success with userId', 'api_test_account', 'P@ssw0rd', 'email', 200, 'api_test_account', None, None], ['IDorEmail - logintype error', '+33757130211', 'P@ssw0rd', 'sms', 406, None, 1019, 'Bad user credential'], ['IDorEmail - account is not exit', 'abcabc', 'ABCabc123!', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - userIdOrEmail null', '', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['IDorEmail - password error', 'api_test_account', 'ABCabc123!', 'email', 401, None, 1019, 'Bad user credential'], ['IDorEmail - password null', 'api_test_account', '', 'email', 400, None, 1501, 'Password is required']], 'test_phoneNumber_login': [['Phonenumber Login - login success with sms', '+33757130211', 'P@ssw0rd', 'sms', 200, 'api_test_account', None, None], ['Phonenumber Login - login fail with userId', 'api_test_account', 'P@ssw0rd', 'email', 406, None, 1019, 'Bad user credential'], ['Phonenumber Login - phoneNumber null', '', 'P@ssw0rd', 'sms', 400, None, 1080, 'The account is temporarily locked because of too many failures'], ['Phonenumber Login - password error', '+33757130211', 'ABCabc123!', 'sms', 401, None, 1019, 'Bad user credential'], ['Phonenumber Login - password null', '+33757130211', '', 'sms', 400, None, 1501, 'Password is required'], ['Phonenumber Login - account is not exit', '+8618800000000', 'ABCabc123!', 'sms', 406, None, 1019, 'Bad user credential']], 'test_email_register': [['邮箱注册接口_注册成功', 'Timekettle@icloud.com', '123456', True, 'Success.', 200, None, None, 'Timekettle@icloud.com', 5], ['邮箱注册接口_邮箱已注册', 'Timekettle@icloud.com', '123456', False, 'Param Error.', 302, 2009, 'Email Registered.', None, 5], ['邮箱注册接口_验证码错误', 'Timekettle@icloud1.com', '123456', False, 'Param Error.', 302, 2005, 'VerifyCode Error.', None, 'None'], ['邮箱注册接口_邮箱为空', '', '123456', False, 'Param Missing.', 301, 2001, 'Email empty.', None, 'None'], ['邮箱注册接口_密码为空', 'Timekettle@icloud1.com', '', False, 'Param Missing.', 301, 2002, 'Pass empty.', None, 'None'], ['邮箱注册接口_验证码为空', 'Timekettle@icloud1.com', '123456', False, 'Param Missing.', 301, 2004, 'VerifyCode Empty.', None, 'None']], 'test_is_email_exist': [['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱存在', 'Timekettle@icloud1.com', True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_邮箱号不区分大小写', 'timeKETTLE@Icloud.com', True, 'Success.', 200, None, None, True], ['查询邮箱是否存在_邮箱号SQL注入', "Timekettle@icloud1.com and '1' = '1'", True, 'Success.', 200, None, None, False], ['查询邮箱是否存在_过长的邮箱号', 'ssdfsdsjagsjgasjjsdfjaghsagdhfasghfshgfhaghghdsdghaghagshdgahgsdhagshd', False, 'Param Error.', 302, 2016, 'Email Length Limit.', None], ['查询邮箱是否存在_邮箱号为空', ' ', False, 'Param Missing.', 301, 2001, 'Email empty.', None]], 'test_get_verifycode': {1: [['获取验证码_正向流程_注册', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True], ['获取验证码_正向流程_忘记密码', '1208339033@qq.com', 'resetPass', True, 200, 'Success.', None, None, True], ['获取验证码_邮箱为空', '', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['获取验证码_optType为空', '1208339033@qq.com', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None]], 2: [['获取验证码_5min内可以获取3次验证码', '1208339033@qq.com', 'register', True, 200, 'Success.', None, None, True]], 3: [['获取验证码_重发验证码次数限制', '1208339033@qq.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]], 4: [['5分钟内50次_限制IP', '1208339033@qq.com', 'Timekettle@icloud.com', 'register', False, 303, 'Request Limit.', 2015, 'VerifyCode Limit.', 0]]}, 'test_email_login': {1: [['邮箱登录_正确的邮箱和密码', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_邮箱号不区分大小写', 'TIMEKETTLE@ICLOUD.COM', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com'], ['邮箱登录_密码错误', 'Timekettle@icloud.com', '111111', False, 302, 'Param Error.', 2003, 'Pass Error.', 4], ['邮箱登录_邮箱号未注册', 'Timekettle@icloud1.com', '111111', False, 302, 'Param Error.', 3001, 'No data found by email.', None], ['邮箱登录_邮箱为空', '', '111111', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['邮箱登录_密码为空', 'Timekettle@icloud1.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None], ['邮箱登录_参数格式错误', 123, 123, False, 302, 'Param Error.', 3001, 'No data found by email.', None]], 2: [['邮箱登录_尝试密码次数限制_正确邮箱密码请求5次', 'Timekettle@icloud.com', '123456', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']], 3: [['邮箱登录_尝试密码次数限制_错误邮箱密码请求5次', 'Timekettle@icloud.com', '111111', False, 303, 'Request Limit.', 2018, 'Email Pass Login Lock.', None]], 4: [['邮箱登录_重置密码后，邮箱锁定解除', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, 'Timekettle@icloud.com']]}, 'test_reset_pass': [['忘记密码_重置密码成功', 'Timekettle@icloud.com', '111111', True, 200, 'Success.', None, None, True, '111111'], ['忘记密码_邮箱不区大小写', 'TIMEKETTLE@ICLOUD.COM', '222222', True, 200, 'Success.', None, None, True, '222222'], ['忘记密码_邮箱未注册', 'Timekettle@icloud1.com', '333333', False, 302, 'Param Error.', 3001, 'No data found by email.', None, '222222'], ['忘记密码_验证码错误', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码已使用过', 'Timekettle@icloud.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_使用验证码重置别人账号', '1208339033@qq.com', '333333', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None, '222222'], ['忘记密码_验证码为空', 'Timekettle@icloud.com', '333333', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None, '222222'], ['忘记密码_邮箱为空', '', '333333', False, 301, 'Param Missing.', 2001, 'Email empty.', None, '222222'], ['忘记密码_密码为空', 'Timekettle@icloud.com', '', False, 301, 'Param Missing.', 2002, 'Pass empty.', None, '222222']], 'test_verify_code': [['验证码验证_验证码正确', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入新验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_重发验证码_输入旧验证码', 'Timekettle@icloud.com', '123456', 'register', True, 200, 'Success.', None, None, True], ['验证码验证_验证码错误', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_optType错误', 'Timekettle@icloud.com', '123456', 'retPass', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_输入别人收到的验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_重复使用验证码', 'Timekettle@icloud.com', '123456', 'register', False, 302, 'Param Error.', 2005, 'VerifyCode Error.', None], ['验证码验证_邮箱为空', '', '123456', 'register', False, 301, 'Param Missing.', 2001, 'Email empty.', None], ['验证码验证_optType为空', 'Timekettle@icloud.com', '123456', '', False, 301, 'Param Missing.', 2008, 'OptType Empty.', None], ['验证码验证_验证码为空', 'Timekettle@icloud.com', '123456', 'register', False, 301, 'Param Missing.', 2004, 'VerifyCode Empty.', None]], 'test_update_nickname': [['更新用户信息_更新成功', 40, 'new_name', True, 200, 'Success.', None, None, 'new_name'], ['更新用户信息_用户不存在', 99999, 'new_name1', False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['更新用户信息_用户Id为空', None, 'new_name1', False, 301, 'Param Missing.', 2010, 'Id Empty.', None], ['更新用户信息_昵称为空', 40, None, False, 301, 'Param Missing.', 2006, 'Nickname Empty.', None]], 'test_get_userinfo': [['根据用户ID查询用户信息_正向流程', 40, True, 200, 'Success.', None, None, 'new_name'], ['根据用户ID查询用户信息_用户id不存在', 99999, False, 404, 'Data Not Found.', 3002, 'No data found by id.', None], ['根据用户ID查询用户信息_用户Id为空', '', False, 301, 'Param Missing.', 2010, 'Id Empty.', None]]} 
[2022-11-10 15:23:23,796][read_data.py 21][INFO]: 加载 C:\Users\shawn.xiao\Desktop\qa_api\data\scenario_test_data.yml 文件......
[2022-11-10 15:23:23,797][read_data.py 24][INFO]: 读到数据 ==>>  {'test_register_update': {'email': '1208339033@qq.com', 'password': '123456', 'nickname': 'mm', 'success': True, 'desc': 'Success', 'code': 2000, 'reason': ''}} 
[2022-11-10 15:23:23,925][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:23,925][test_05_login.py 21][INFO]: 尝试登录邮箱：leroxa1039@fgvod.com，密码：P@ssw0rd，查看接口返回
[2022-11-10 15:23:23,925][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:23,925][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:23,925][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:23,925][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "leroxa1039@fgvod.com",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668065003926
}
[2022-11-10 15:23:24,181][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'xkO9oQVgeHDgRfSqLkuU4ZRnQ3qfN8L4', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 15:23:24,181][test_05_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 15:23:24,181][test_05_login.py 30][INFO]: *************** IDorEmail Login API - login success with email 断言成功  ***************
[2022-11-10 15:23:24,181][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:24,218][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:24,219][test_05_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 15:23:24,219][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:24,219][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:24,219][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:24,219][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668065004219
}
[2022-11-10 15:23:24,378][user.py 42][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'WblJu9P0AgYKOFNiVyQYyvSai7CDIFTO', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 15:23:24,378][test_05_login.py 26][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 15:23:24,378][test_05_login.py 30][INFO]: *************** IDorEmail - login success with userId 断言成功  ***************
[2022-11-10 15:23:24,378][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:24,394][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:24,394][test_05_login.py 21][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 15:23:24,394][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:24,395][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:24,395][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:24,395][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668065004395
}
[2022-11-10 15:23:24,410][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 07:23:22.992', 'message': 'Bad user credential'} 
[2022-11-10 15:23:24,410][test_05_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 15:23:24,410][test_05_login.py 36][INFO]: *************** IDorEmail - logintype error 断言成功  ***************
[2022-11-10 15:23:24,410][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:24,437][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:24,437][test_05_login.py 21][INFO]: 尝试登录邮箱：abcabc，密码：ABCabc123!，查看接口返回
[2022-11-10 15:23:24,437][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:24,437][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:24,437][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:24,437][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "abcabc",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668065004438
}
[2022-11-10 15:23:24,465][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 07:23:23.046', 'message': 'Bad user credential'} 
[2022-11-10 15:23:24,465][test_05_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 15:23:24,465][test_05_login.py 36][INFO]: *************** IDorEmail - account is not exit 断言成功  ***************
[2022-11-10 15:23:24,465][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:24,478][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:24,478][test_05_login.py 21][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 15:23:24,478][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:24,478][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:24,478][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:24,478][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668065004478
}
[2022-11-10 15:23:24,533][user.py 42][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 07:23:23.113', 'message': 'Bad user credential'} 
[2022-11-10 15:23:24,533][test_05_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 15:23:24,533][test_05_login.py 36][INFO]: *************** IDorEmail - userIdOrEmail null 断言成功  ***************
[2022-11-10 15:23:24,533][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:24,544][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:24,544][test_05_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：ABCabc123!，查看接口返回
[2022-11-10 15:23:24,544][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:24,544][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:24,544][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:24,544][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668065004544
}
[2022-11-10 15:23:24,645][user.py 42][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 07:23:23.227', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 15:23:24,645][test_05_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 15:23:24,645][test_05_login.py 36][INFO]: *************** IDorEmail - password error 断言成功  ***************
[2022-11-10 15:23:24,646][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:24,654][test_05_login.py 20][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:24,655][test_05_login.py 21][INFO]: 尝试登录邮箱：api_test_account，密码：，查看接口返回
[2022-11-10 15:23:24,655][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:24,655][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:24,655][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:24,655][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "userIdOrEmail": "api_test_account",
    "loginType": "email",
    "password": "",
    "captcha": "",
    "siteKey": 1668065004656
}
[2022-11-10 15:23:24,686][user.py 42][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-10 07:23:23.268', 'message': 'Password is required'} 
[2022-11-10 15:23:24,687][test_05_login.py 26][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 15:23:24,687][test_05_login.py 36][INFO]: *************** IDorEmail - password null 断言成功  ***************
[2022-11-10 15:23:24,687][test_05_login.py 38][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:24,732][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:24,733][test_05_login.py 47][INFO]: 尝试登录邮箱：+33757130211，密码：P@ssw0rd，查看接口返回
[2022-11-10 15:23:24,733][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:24,733][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:24,733][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:24,733][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668065004734
}
[2022-11-10 15:23:24,901][user.py 61][INFO]: 接口返回码是 【 200 】, 返回信息：{'user': 'api_test_account', 'key': 'e6vrffBdp08xXx45Z4yR4uRzoOoszjUJ', 'mfaEnabled': False, 'needUpdatePassword': False, 'inWhitelist': False} 
[2022-11-10 15:23:24,901][test_05_login.py 52][INFO]: 期望结果：登录成功， 实际结果：【 登录成功 】
[2022-11-10 15:23:24,901][test_05_login.py 56][INFO]: *************** Phonenumber Login - login success with sms 断言成功  ***************
[2022-11-10 15:23:24,902][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:24,910][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:24,910][test_05_login.py 47][INFO]: 尝试登录邮箱：api_test_account，密码：P@ssw0rd，查看接口返回
[2022-11-10 15:23:24,910][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:24,911][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:24,911][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:24,911][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "api_test_account",
    "loginType": "email",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668065004910
}
[2022-11-10 15:23:24,923][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 07:23:23.506', 'message': 'Bad user credential'} 
[2022-11-10 15:23:24,923][test_05_login.py 52][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 15:23:24,923][test_05_login.py 62][INFO]: *************** Phonenumber Login - login fail with userId 断言成功  ***************
[2022-11-10 15:23:24,924][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:24,932][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:24,932][test_05_login.py 47][INFO]: 尝试登录邮箱：，密码：P@ssw0rd，查看接口返回
[2022-11-10 15:23:24,933][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:24,933][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:24,933][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:24,933][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "",
    "loginType": "sms",
    "password": "P@ssw0rd",
    "captcha": "",
    "siteKey": 1668065004934
}
[2022-11-10 15:23:24,952][user.py 61][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1080, 'timestamp': '2022-11-10 07:23:23.534', 'message': 'The account is temporarily locked because of too many failures', 'errorData': {'lockedTill': 1668070806}} 
[2022-11-10 15:23:24,952][test_05_login.py 52][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 15:23:24,952][test_05_login.py 62][INFO]: *************** Phonenumber Login - phoneNumber null 断言成功  ***************
[2022-11-10 15:23:24,952][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:24,983][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:24,984][test_05_login.py 47][INFO]: 尝试登录邮箱：+33757130211，密码：ABCabc123!，查看接口返回
[2022-11-10 15:23:24,984][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:24,984][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:24,984][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:24,984][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668065004985
}
[2022-11-10 15:23:25,076][user.py 61][INFO]: 接口返回码是 【 401 】, 返回信息：{'status': 'UNAUTHORIZED', 'errorId': 1019, 'timestamp': '2022-11-10 07:23:23.657', 'message': 'Bad user credential', 'errorData': {}} 
[2022-11-10 15:23:25,076][test_05_login.py 52][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 15:23:25,076][test_05_login.py 62][INFO]: *************** Phonenumber Login - password error 断言成功  ***************
[2022-11-10 15:23:25,076][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:25,122][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:25,122][test_05_login.py 47][INFO]: 尝试登录邮箱：+33757130211，密码：，查看接口返回
[2022-11-10 15:23:25,122][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:25,122][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:25,122][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:25,122][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+33757130211",
    "loginType": "sms",
    "password": "",
    "captcha": "",
    "siteKey": 1668065005122
}
[2022-11-10 15:23:25,142][user.py 61][INFO]: 接口返回码是 【 400 】, 返回信息：{'status': 'BAD_REQUEST', 'errorId': 1501, 'timestamp': '2022-11-10 07:23:23.724', 'message': 'Password is required'} 
[2022-11-10 15:23:25,143][test_05_login.py 52][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 15:23:25,143][test_05_login.py 62][INFO]: *************** Phonenumber Login - password null 断言成功  ***************
[2022-11-10 15:23:25,143][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
[2022-11-10 15:23:25,152][test_05_login.py 46][INFO]: *************** 开始执行用例 ***************
[2022-11-10 15:23:25,152][test_05_login.py 47][INFO]: 尝试登录邮箱：+8618800000000，密码：ABCabc123!，查看接口返回
[2022-11-10 15:23:25,152][rest_client.py 51][INFO]: 接口请求地址 ==>> https://dev.mamorucrypto.io/api/v2/public/auth/login
[2022-11-10 15:23:25,152][rest_client.py 52][INFO]: 接口请求方式 ==>> POST
[2022-11-10 15:23:25,152][rest_client.py 55][INFO]: 接口请求头 ==>> {
    "Content-Type": "application/json"
}
[2022-11-10 15:23:25,152][rest_client.py 61][INFO]: 接口请求体 json 参数 ==>> {
    "phoneNumber": "+8618800000000",
    "loginType": "sms",
    "password": "ABCabc123!",
    "captcha": "",
    "siteKey": 1668065005152
}
[2022-11-10 15:23:25,170][user.py 61][INFO]: 接口返回码是 【 406 】, 返回信息：{'status': 'NOT_ACCEPTABLE', 'errorId': 1019, 'timestamp': '2022-11-10 07:23:23.753', 'message': 'Bad user credential'} 
[2022-11-10 15:23:25,170][test_05_login.py 52][INFO]: 期望结果：登录失败， 实际结果：【 登录失败 】
[2022-11-10 15:23:25,171][test_05_login.py 62][INFO]: *************** Phonenumber Login - account is not exit 断言成功  ***************
[2022-11-10 15:23:25,171][test_05_login.py 64][INFO]: *************** 结束执行用例 ***************
